{"version":3,"sources":["components/layout-components/PageHeaderAlt.js","views/app-views/profile/index.js","components/sp-componenets/project-component/project-set.js","views/app-views/project/index.js"],"names":["connect","navType","theme","children","background","className","overlap","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","Profile","state","id","username","first_name","last_name","email","contact","website","created_date","status","passwordx","conform_password","change","loading","loadData","setState","headers","Cookies","get","axios","BaseUrl","then","a","response","console","log","data","body","refNo","firstName","lastName","contactNumber","createdDate","statusType","catch","error","showMessage","setTimeout","onChangeFirstName","e","target","value","onChangeLastName","onChangeUsername","onChangeMobile","onChangeWebsite","onChangePassword","onChangeConformPassword","onChangePasswordCheckbox","password","onUpdate","message","updateData","success","undefined","this","props","history","push","length","substring","border","justify","sm","md","lg","avatarSize","shape","size","src","Flex","alignItems","mobileFlex","justifyContent","xl","placeholder","onChange","disabled","type","Password","autoComplete","onClick","alt","React","Component","withRouter","columns","title","dataIndex","key","width","ProjectSet","move_to_project_view","project","corporate_id","handleProjectId","handleCorporate","handleNavigation","navigate_to_project_view","uuid","logo","val","corporate","corporateLogo","name","projects","accessType","project_list","map","created","splitCreated","split","splitCreatedTime","modified","modifiedDate","splitModified","splitModifiedTime","obj","projectName","modified_date","scrum_role","color","role","view","EyeOutlined","backgroundColor","slice","header","dataSource","corporateReducer","dispatch","corporate_actions","handleSpinner","spinner_actions","navigation_actions","project_actions","Project","my_project","load_projects","res","err","changeNav","gutter","xs","actionCreator"],"mappings":"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","file":"static/js/0.7564fb3e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React from 'react'\r\nimport {Row, Col, Card, Avatar, Button, notification, Form, Input, message, Checkbox} from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { Icon } from 'components/util-components/Icon'\r\nimport {\r\n    GlobalOutlined,\r\n    MailOutlined,\r\n    HomeOutlined,\r\n    PhoneOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\n\r\nconst Experiences = () => (\r\n    <Card title=\"Experiences\">\r\n        <div className=\"mb-3\">\r\n            <Row>\r\n                <Col sm={24} md={22}>\r\n                    {/*{employementList.map((elm, i) => {*/}\r\n                    {/*    return (*/}\r\n                    {/*        <div className={`${i === (employementList.length - 1)? '' : 'mb-4'}`} key={`eduction-${i}`}>*/}\r\n                    {/*            <AvatarStatus src={elm.img} name={elm.title} subTitle={elm.duration}/>*/}\r\n                    {/*            <p className=\"pl-5 mt-2 mb-0\">{elm.desc}</p>*/}\r\n                    {/*        </div>*/}\r\n                    {/*    )*/}\r\n                    {/*})}*/}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    </Card>\r\n)\r\n\r\nconst Interested = () => (\r\n    <Card title=\"Interested\">\r\n        <Row gutter={30}>\r\n            {/*<Col sm={24} md={12}>*/}\r\n            {/*    {interestedList.filter((_, i) => i < 4).map((elm, i) => {*/}\r\n            {/*        return (*/}\r\n            {/*            <div className=\"mb-3\" key={`interested-${i}`}>*/}\r\n            {/*                <h4 className=\"font-weight-semibold\">{elm.title}</h4>*/}\r\n            {/*                <p>{elm.desc}</p>*/}\r\n            {/*            </div>*/}\r\n            {/*        )*/}\r\n            {/*    })}*/}\r\n            {/*</Col>*/}\r\n            {/*<Col sm={24} md={12}>*/}\r\n            {/*    {interestedList.filter((_, i) => i >= 4).map((elm, i) => {*/}\r\n            {/*        return (*/}\r\n            {/*            <div className=\"mb-3\" key={`interested-${i}`}>*/}\r\n            {/*                <h4 className=\"font-weight-semibold\">{elm.title}</h4>*/}\r\n            {/*                <p>{elm.desc}</p>*/}\r\n            {/*            </div>*/}\r\n            {/*        )*/}\r\n            {/*    })}*/}\r\n            {/*</Col>*/}\r\n        </Row>\r\n    </Card>\r\n)\r\n\r\nconst Connection = () => (\r\n    <Card title=\"Connection\">\r\n        {/*{*/}\r\n        {/*    connectionList.map((elm, i) => {*/}\r\n        {/*        return (*/}\r\n        {/*            <div className={`${i === (connectionList.length - 1)? '' : 'mb-4'}`} key={`connection-${i}`}>*/}\r\n        {/*                <AvatarStatus src={elm.img} name={elm.name} subTitle={elm.title}/>*/}\r\n        {/*            </div>*/}\r\n        {/*        )*/}\r\n        {/*    })*/}\r\n        {/*}*/}\r\n    </Card>\r\n)\r\n\r\nconst Group = () => (\r\n    <Card title=\"Group\">\r\n        {/*{*/}\r\n        {/*    groupList.map((elm, i) => {*/}\r\n        {/*        return (*/}\r\n        {/*            <div className={`${i === (groupList.length - 1)? '' : 'mb-4'}`} key={`connection-${i}`}>*/}\r\n        {/*                <AvatarStatus src={elm.img} name={elm.name} subTitle={elm.desc}/>*/}\r\n        {/*            </div>*/}\r\n        {/*        )*/}\r\n        {/*    })*/}\r\n        {/*}*/}\r\n    </Card>\r\n)\r\n\r\nexport class Profile extends React.Component {\r\n\r\n    state = {\r\n        id : 0,\r\n        username : '',\r\n        first_name : '',\r\n        last_name : '',\r\n        email : '',\r\n        contact : '',\r\n        website : '',\r\n        created_date : '',\r\n        status : '',\r\n        passwordx: '',\r\n        conform_password: '',\r\n        change: false,\r\n        loading: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        this.loadData();\r\n    }\r\n\r\n    loadData = () => {\r\n        this.setState({loading: true});\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user/details`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                console.log(response);\r\n                let data = response.data.body;\r\n                let info = {\r\n                }\r\n                this.setState({\r\n                    id : data.id,\r\n                    username : data.refNo,\r\n                    first_name : data.firstName,\r\n                    last_name : data.lastName,\r\n                    email : data.email,\r\n                    contact : data.contactNumber,\r\n                    website : '',\r\n                    created_date : data.createdDate,\r\n                    status : data.statusType\r\n                })\r\n                this.setState({loading: false});\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    onChangeFirstName = e => {\r\n        this.setState({first_name: e.target.value});\r\n    };\r\n    onChangeLastName = e => {\r\n        this.setState({last_name: e.target.value});\r\n    };\r\n    onChangeUsername = e => {\r\n        this.setState({username: e.target.value});\r\n    };\r\n    onChangeMobile = e => {\r\n        this.setState({contact: e.target.value});\r\n    };\r\n    onChangeWebsite = e => {\r\n        this.setState({website: e.target.value});\r\n    };\r\n\r\n    onChangePassword = e => {\r\n        this.setState({passwordx: e.target.value});\r\n    };\r\n\r\n    onChangeConformPassword = e => {\r\n        this.setState({conform_password: e.target.value});\r\n    };\r\n\r\n    onChangePasswordCheckbox = e => {\r\n        this.setState({change: !this.state.change, password: \"\", conform_password: \"\"})\r\n    }\r\n\r\n    onUpdate = () => {\r\n        if(this.state.first_name==\"\") {\r\n            message.error(\"Please, enter first name\");\r\n        } else if(this.state.last_name==\"\") {\r\n            message.error(\"Please, enter last name\");\r\n        } else if(this.state.change) {\r\n            if(this.state.passwordx===\"\") {\r\n                message.error(\"Please, enter password\");\r\n            } else {\r\n                if (this.state.conform_password === \"\") {\r\n                    message.error(\"Please, enter conform password\");\r\n                } else {\r\n                    if (this.state.conform_password === this.state.passwordx) {\r\n                        this.updateData();\r\n                    } else {\r\n                        message.error(\"Password and conform password does not match\");\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            this.updateData();\r\n        }\r\n    }\r\n\r\n    updateData = () => {\r\n        this.setState({loading: true});\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"put\";\r\n\r\n        let body = {\r\n            id: this.state.id,\r\n            refNo: this.state.username,\r\n            firstName: this.state.first_name,\r\n            lastName: this.state.last_name,\r\n            contactNumber: this.state.contact,\r\n            password: this.state.passwordx===\"\"?null:this.state.passwordx,\r\n            statusType: this.state.status,\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user/update`, body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status===200) {\r\n                    if(response.data.success) {\r\n                        message.success(\"Your details updated successfully\");\r\n                        this.setState({\r\n                            change: false,\r\n                            password: \"\",\r\n                            conform_password: \"\"\r\n                        })\r\n                        this.loadData();\r\n                    }\r\n                }\r\n                this.setState({loading: false});\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        const avatarSize = 150;\r\n\r\n        let email = this.state.email;\r\n        if(email.length>20) {\r\n            email = email.substring(0, 20) + \"...\";\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"container my-4\">\r\n                    {/*<ProfileInfo avatarSize={avatarSize} info = {this.state.info} />*/}\r\n\r\n                    <Card style={{border: \"1px solid black\"}}>\r\n                        <Row justify=\"center\">\r\n                            <Col sm={24} md={24} lg={24}>\r\n                                <div>\r\n                                    <div className=\"rounded p-2 bg-white shadow-sm mx-auto\" style={{border: \"1px solid black\", 'marginTop': '-3.5rem', 'maxWidth': `${avatarSize + 16}px`}}>\r\n                                        <Avatar shape=\"square\" size={avatarSize} src=\"/img/avatars/user-vector.jpg\" />\r\n                                    </div>\r\n\r\n                                    <Flex alignItems=\"center\"\r\n                                          mobileFlex={false}\r\n                                          className=\"mb-5 mt-3 text-center\"\r\n                                          justifyContent={'center'}\r\n                                    >\r\n                                        <h2 className=\"mb-0 mt-md-0 mt-2\">{this.state.first_name} {this.state.last_name}</h2>\r\n                                        {/*<div className=\"ml-md-3 mt-3 mt-md-0\">*/}\r\n                                        {/*</div>*/}\r\n                                    </Flex>\r\n                                    <div>\r\n                                        <Row style={{justifyContent: 'center'}}>\r\n                                            <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                <span>First Name</span><span className={'required-text'}>*</span>\r\n                                                <Input placeholder=\"First Name\" value={this.state.first_name} onChange={this.onChangeFirstName} />\r\n                                            </Col>\r\n                                            <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                <span>Last Name</span><span className={'required-text'}>*</span>\r\n                                                <Input placeholder=\"Last Name\" value={this.state.last_name} onChange={this.onChangeLastName} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row style={{justifyContent: 'center'}}>\r\n                                            <Col className={\"m-2\"} md={6} lg={6} xl={6}>\r\n                                                <span>Ref Name</span><span className={'required-text'}>*</span>\r\n                                                <Input placeholder=\"Ref Name\" value={this.state.username} disabled={true} onChange={this.onChangeUsername} />\r\n                                            </Col>\r\n                                            <Col className={\"m-2\"} md={16} lg={16} xl={16}>\r\n                                                <span>Email</span><span className={'required-text'}>*</span>\r\n                                                <Input type={'email'} placeholder=\"email\" disabled={true} value={this.state.email}/>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row style={{justifyContent: 'center'}}>\r\n                                            <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                <span>Mobile</span>\r\n                                                <Input placeholder=\"Mobile\" value={this.state.contact} onChange={this.onChangeMobile}/>\r\n                                            </Col>\r\n                                            <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                <span>Website</span>\r\n                                                <Input placeholder=\"www.example.com\" value={this.state.website} onChange={this.onChangeWebsite}/>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row style={{justifyContent: 'center'}}>\r\n                                            <Col className={\"mt-2\"} md={22} lg={22} xl={22}>\r\n                                                <Checkbox onChange={this.onChangePasswordCheckbox}>Change Password</Checkbox>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            this.state.change?\r\n                                                <Row style={{justifyContent: 'center'}}>\r\n                                                    <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                        <span>Password</span>\r\n                                                        <Input.Password autoComplete=\"new-password\" placeholder={'New Password'} value={this.state.passwordx} onChange={this.onChangePassword} />\r\n                                                    </Col>\r\n                                                    <Col className={\"m-2\"} md={11} lg={11} xl={11}>\r\n                                                        <span>Conform Password</span> {this.state.password!==\"\"?<span className={'required-text'}>*</span>:null}\r\n                                                        <Input.Password placeholder={'Conform Password'} value={this.state.conform_password} onChange={this.onChangeConformPassword} />\r\n                                                    </Col>\r\n                                                </Row>:null\r\n                                        }\r\n                                        <Row style={{justifyContent: 'center'}}>\r\n                                            <Col className={\"text-right\"} md={22} lg={22} xl={22}>\r\n                                                <Button type={'primary'} onClick={this.onUpdate}>Update</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n\r\n                    {\r\n                        this.state.loading?\r\n                            <div className=\"loading-overlay-2\">\r\n                                <div className=\"bounce-loader\">\r\n                                    <img src={'/img/preloader.gif'} alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            :null\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Profile)\r\n","import React from \"react\";\r\nimport {Avatar, Button, Card, Table, Tag, Tooltip} from \"antd\";\r\nimport { EyeOutlined  } from '@ant-design/icons';\r\n\r\nimport './project-set.scss'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport * as spinner_actions from \"../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from '../../../redux/actions/Navigation';\r\nimport * as project_actions from '../../../redux/actions/Project';\r\nimport * as corporate_actions from '../../../redux/actions/Corporate';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Project Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '30%'\r\n    },\r\n    {\r\n        title: 'Your Scrum Role',\r\n        dataIndex: 'scrum_role',\r\n        key: 'scrum_role',\r\n        width: '10%'\r\n    },\r\n    {\r\n        title: 'Created Date',\r\n        dataIndex: 'created_date',\r\n        key: 'created_date',\r\n        width: '20%'\r\n    },\r\n    {\r\n        title: 'Modified Date',\r\n        dataIndex: 'modified_date',\r\n        key: 'modified_date',\r\n        width: '20%'\r\n    },\r\n    {\r\n        title: 'View',\r\n        dataIndex: 'view',\r\n        key: 'view',\r\n        width: '10%'\r\n    },\r\n];\r\n\r\nclass ProjectSet extends React.Component {\r\n\r\n     move_to_project_view = (project, corporate_id) => {\r\n         this.props.handleProjectId(project);\r\n         this.props.handleCorporate(corporate_id);\r\n         this.props.handleNavigation(2);\r\n         this.navigate_to_project_view(project.uuid);\r\n    }\r\n\r\n    navigate_to_project_view = (ref) => {\r\n        this.props.history.push(`/app/project/backlog`);\r\n    }\r\n\r\n    render() {\r\n\r\n        let logo = this.props.val.corporate.corporateLogo;\r\n        let name = this.props.val.corporate.name;\r\n        let accessType = this.props.val.accessType;\r\n        let projects = this.props.val.projects;\r\n\r\n        let project_list = [];\r\n        if(projects!=null && projects!=\"\" && projects!=undefined) {\r\n            projects.map(val => {\r\n\r\n                let created = val.project.createdDate;\r\n                let splitCreated = created.split(\"T\");\r\n                let splitCreatedTime = splitCreated[1].split(\".\");\r\n                created = `${splitCreated[0]} ${splitCreatedTime[0]}`;\r\n\r\n                let modified = val.project.modifiedDate;\r\n                let splitModified = modified.split(\"T\");\r\n                let splitModifiedTime = splitCreated[1].split(\".\");\r\n                modified = `${splitModified[0]} ${splitModifiedTime[0]}`;\r\n\r\n                let obj = {\r\n                    name:val.project.projectName,\r\n                    created_date:`Created on ${created}`,\r\n                    modified_date:`Modified on ${modified}`,\r\n                    scrum_role:<Tag color={'geekblue'} key={val.project.id}>\r\n                    {val.role}\r\n                    </Tag>,\r\n                    view: <Tooltip title=\"View\">\r\n                        <Button type={\"text\"} style={{color:'#3e79f7'}} onClick={()=>this.move_to_project_view(val.project, this.props.val.corporate.id)}><EyeOutlined /></Button>\r\n                    </Tooltip>\r\n                }\r\n\r\n                project_list.push(obj);\r\n            });\r\n        }\r\n\r\n        return(\r\n                <Card style={{border: \"1px solid black\"}}>\r\n                    <div className=\"mt-3\">\r\n                        <div className={'project-corporate-header'}>\r\n                            <div className={'project-corporate-header-logo'}>\r\n                                {\r\n                                    (logo!=null && logo!=\"\" && logo!= undefined)?\r\n                                        <img src={logo} alt=\"\" width={20}/>:\r\n                                        <Avatar size={30} style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>{name.slice(0,1)}</Avatar>\r\n                                }\r\n                            </div>\r\n                            <h4 className={'corporate-header'}>{name}</h4>\r\n                        </div>\r\n                        <div>\r\n                            <Table header={false} dataSource={project_list} columns={columns} className={'project-set-tbl'} />\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleCorporate: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectSet));\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Card, Avatar, Dropdown, Table, Menu, Tag } from 'antd';\r\nimport './project.scss'\r\nimport Cookies from \"js-cookie\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Profile} from \"../profile\";\r\nimport ProjectSet from '../../../components/sp-componenets/project-component/project-set';\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from '../../../server/base_urls'\r\nimport {connect} from \"react-redux\";\r\nimport * as actionCreator from '../../../redux/actions/Navigation'\r\n\r\nclass Project extends React.Component {\r\n\r\n    state = {\r\n        my_project: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        this.props.changeNav(1);\r\n        this.load_projects();\r\n    }\r\n\r\n    load_projects = () => {\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        axios.get(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}project/my-projects`, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({my_project: res.data.body});\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n\r\n                {\r\n                    this.state.my_project.map(val=>\r\n                        <Row gutter={16}>\r\n                            <Col xs={24} sm={24} md={24} lg={24}>\r\n                                <ProjectSet val={val} />\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeNav: (data) => dispatch(actionCreator.handlerNavigation(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Project));\r\n"],"sourceRoot":""}