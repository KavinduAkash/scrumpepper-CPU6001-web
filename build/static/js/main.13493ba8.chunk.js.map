{"version":3,"sources":["components/util-components/Icon/index.js","components/shared-components/Flex/index.js","redux/constants/Project.js","server/base_urls.js","components/layout-components/Logo.js","redux/constants/Corporate.js","redux/constants/Spinner.js","redux/constants/Navigation.js","redux/actions/Corporate.js","redux/constants/User.js","configs/AppConfig.js","constants/ThemeConstant.js","redux/constants/Auth.js","redux/actions/Spinner.js","redux/actions/Navigation.js","redux/actions/Project.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Corporate.js","redux/reducers/Spinner.js","redux/reducers/Navigation.js","redux/reducers/Project.js","redux/constants/Documents.js","redux/reducers/Documents.js","redux/constants/Poker.js","redux/reducers/Poker.js","redux/reducers/User.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/corporate/index.js","views/app-views/corporate/CorporateManagement/index.js","views/app-views/project/project-views/project-spp-poker/poker-inner-routers.js","components/sp-componenets/spp-poker-components/spp-poker-modal.jsx","redux/actions/Documents.js","redux/actions/Poker.js","views/app-views/project/project-views/project-spp-poker/project-spp-poker-all.js","views/app-views/project/project-views/project-spp-poker/project-spp-poker-new.js","views/app-views/project/project-views/project-spp-poker/project-spp-poker-play.js","views/app-views/project/project-views/project-spp-poker/index.js","components/layout-components/BacklogTable/backlog-table.js","components/sp-componenets/user-story-component/TaskComponent.js","components/sp-componenets/user-story-component/TaskSetComponent.js","components/layout-components/UserStoryModal/MemberManagementModal.js","components/layout-components/UserStoryModal/UserStoryModal.js","components/sp-componenets/sprint-components/sprint-edit-modal.js","components/sp-componenets/sprint-components/backlog-container.js","views/app-views/project/project-views/project-backlog.js","components/sp-componenets/sprint-components/sprint-container.js","views/app-views/project/project-views/project-sprints.js","views/app-views/project/project-views/project-reports-burnup.js","views/app-views/project/project-views/project-report-burndown.js","views/app-views/project/project-views/project-report-velocity.js","views/app-views/project/project-views/project-teams.js","views/app-views/project/project-views/project-notifications.js","views/app-views/project/project-views/project-docs/docs-inner-routers.js","views/app-views/project/project-views/project-docs/docs-modal.jsx","views/app-views/project/project-views/project-docs/project-docs-all.jsx","views/app-views/project/project-views/project-docs/project-docs-editor.jsx","views/app-views/project/project-views/project-docs/index.js","views/app-views/project/project-views/project-settings.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js"],"names":["Icon","this","props","type","className","React","createElement","Component","Flex","children","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","STORE_PROJECT_ID","STORE_PROJECT_DATA","URL_TYPE","SCRUM_PEPPER_API_URL","status","useBreakpoint","Grid","getLogoWidthGutter","isMobile","navCollapsed","isNavTop","navType","NAV_TYPE_TOP","mobileLogo","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","getLogo","logoType","getLogoDisplay","connect","theme","utils","getBreakPoint","includes","style","width","src","alt","APP_NAME","STORE_CORPORATE_ID","SPINNER_HANDLER","CHANGE_NAVIGATION","storeCorporateId","data","actions","value","STORE_USER","REMOVE_USER","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","sideNavTheme","SIDE_NAV_LIGHT","locale","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","SIDE_NAV_DARK","DIR_RTL","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","handlerSpinner","handlerNavigation","handleProjectId","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","corporate_id","id","persistConfig","keyPrefix","key","storage","persistReducer","console","log","spinner","navigation","Navigation","project","STORE_CURRENT_DOCUMENT","REMOVE_CURRENT_DOCUMENT","document","STORE_CURRENT_POKER_ROOM","REMOVE_CURRENT_POKER_ROOM","room","user","reducers","combineReducers","Theme","Auth","corporateReducer","CorporateReducer","spinnerReducer","SpinnerReducer","navigationReducer","NavigationReducer","projectReducer","ProjectReducer","documentReducer","Documents","pokerReducer","Poker","userReducer","User","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","createStore","applyMiddleware","run","persistStore","configureStore","injectIntl","withRef","dashBoardNavTree","path","title","icon","ProfileOutlined","breadcrumb","submenu","DesktopOutlined","MailOutlined","projectManagementNavTree","UnorderedListOutlined","RedoOutlined","ClockCircleOutlined","AreaChartOutlined","TeamOutlined","BellOutlined","BookOutlined","SettingOutlined","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","setLocale","isLocaleOn","localeKey","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","closeMobileNav","navigationBar","navigationConfig","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","Sider","Layout","dispatch","handleSpinner","spinner_actions","handleNavigation","navigation_actions","withRouter","history","navigate_to_project","collapsed","overflowY","boxShadow","shape","LeftOutlined","projectName","autoHide","getColorContrast","Loading","LoadingOutlined","align","cover","display","size","marginTop","onClose","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","ColorPicker","colorChange","color","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","rgba","r","g","b","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","configState","isCollapse","useThemeSwitcher","switcher","themes","hex","rgbaToHex","Group","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","DashboardOutlined","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","danger","Cookies","remove","MenuUnfoldOutlined","MenuFoldOutlined","UserOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","Footer","Date","getFullYear","Meta","Card","rules","corporate_name","required","address","contact_number_1","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","Corporate","imageUrl","loading_button","contactNumber1","contactNumber2","corporate_long","my_corporates","loadMyCorporates","get","headers","axios","BaseUrl","res","body","beforeUpload","file","isJpgOrPng","error","isLt2M","handleChange","info","originFileObj","openCorporateCreateModal","avatarUpload","FormData","append","post","handleSubmitCreateCorporate","values","request_body","contact_number_2","corporateLogo","response","args","msg","notification","open","resetCorporateInputs","setTimeout","onChangeCorporateName","onChangeCorporateAddress","onChangeCorporateEmail","onChangeCorporateContact1","onChangeCorporateContact2","onClickCorporateCard","corporateHandler","moveToCorporateMange","uploadButton","PlusOutlined","show_skeleton","skeleton","sm","md","lg","xl","avatar","description","my_corporate_list","val","x","corporateAccessType","corporate","statusType","hoverable","minHeight","border","cursor","centered","onCancel","footer","layout","onFinish","listType","showUploadList","customRequest","hasFeedback","TextArea","htmlType","corporate_actions","TabPane","Tabs","Option","AutoComplete","columns","dataIndex","member_columns_admin","member_columns_employee","create_project_columns_employee","add_new_corporate_employee_columns","CorporateManagementView","access_type","employee_list","projects","corporate_employee_results","add_corporate_employee_modal","add_corporate_employee_options","create_project_modal","temporary_selected_employee","temporary_selected_employee_search","temporary_selected_employee_role","temporary_selected_employees_list","temporary_selected_employees_list_x","project_name","loadCorporateDetails","req_obj","corporateId","accessType","employeeList","renderTitle","float","rel","renderItem","count","onSearchCorporateEmployees","search","onSearchUsers","sendInvitations","setCreateProjectModalVisibility","addCorporateEmployeeModalVisibility","onSelectNewCorporateEmployeeToAdd","employee","addMemberToProjectCreate","temporarySelectedEmployee","temporarySelectedEmployeeRole","temporarySelectedEmployeesList","temporarySelectedEmployeesList_x","member","role","clearProjectTempUserAddFields","handleChangeScrumRole","searchProjectTempUser","removeTempMembersFromCreateProject","splice","onChangeProjectName","create_project","project_members","corporateEmployeeId","scrumRole","req_body","projectMembers","list_add_employee_options","firstName","lastName","refNo","yourCorporate","userId","employees","primary","charAt","createdDate","date","mapped_corporate_employee_results","defaultValue","dataSource","dropdownMatchSelectWidth","minWidth","Search","defaultActiveKey","tab","HomeOutlined","inner_route_play","Select","SppPokerModal","sprintId","edit","sprints","load_all_sprints","openModal","onChangeSprint","onChangeDescription","onChangeStatus","handle_room","method","startRoom","d","isEditVisible","goal","sprintName","disble","project_actions","storeCurrentDocument","storePokerRoom","ProjectSppPokerAll","isEdit","selectedRoom","rooms","load_all_rooms","start_room","start_room2","innerRoutes","handle_modal","room_list","cdSplit","startedDate","cd1","cd2","closeDate","md1","md2","mdSplit","sdate","edate","note","fontWeight","textAlign","storeCurrentDoc","document_actions","poker_actions","ProjectSppPokerNew","fib","stompClient","ProjectSppPokerPlay","user_stories","userData","userid","receivername","connected","selected_value","load_project_data","project_id","uuid","load_sprint_data","sprint_id","registerUser","Sock","SockJS","over","onConnected","onError","userData1","subscribe","onPrivateMessage","userJoin","payloadData","parse","votes","chatMessage","senderName","username","send","load_initial","sendPrivateValue","vote","voter_id","room_ref","candidate_id","sprint","roomRef","cards","result_options","userStories","ccs","exact","component","AllRooms","NewRoom","PlayRoom","DragHandle","SortableHandle","MenuOutlined","render","SortableItem","SortableElement","SortableBody","SortableContainer","Task","task_id","is_edit_text","task_name","addMember","taskStatus","onClickEdit","onEditFocus","handleTask","onChangeTaskName","onChangeText","createTask","updateTask","openAddMember","memberModal","onChangeTaskStatus","updateTaskStatus","task","task_status","task_name_text","is_edit_task","onKeyUp","onFocus","onBlur","EditOutlined","UserAddOutlined","MoreOutlined","TaskSetComponent","lbl","taskId","handleMembers","tasks","tasksCount","doneTasksCount","donePercentage","strokeColor","percent","MemberManagementModal","taskAssigns_list","projectMembers_list","corporateEmployees_list","getTaskMembers","prepareMembers","taskAssigns","corporateEmployees","handleTaskMember","y","z","closeModal","member_modal_visibility","pagination","header","config","readonly","tagRender","onMouseDown","event","stopPropagation","marginRight","UserStoryModal","user_story_id","user_story","content","storyPoints","priority","user_story_label","loadProjectUserStoryLbl","label_list","prepareResponseData","prepareData","userStoryLbl","points","modal_controller","onChangeUserStoryTitle","onChangeUserStoryPoints","onChangeLabel","onChangeUserStory","userStoryId","userStoryLabels","current_sprint","Swal","taskLbl","user_story_modal_visibility","tabIndex","newContent","showArrow","image","imageStyle","DatePicker","RangePicker","formatDate","month","getMonth","day","getDate","year","SprintEditModal","startDate","endDate","duration","cleanInputs","onChangeName","onChangeGoal","onChangeDateRange","dateString","start","end","toISOString","onChangeDate","onChangeSprintTime","parts","mydate","setDate","createSprint","updateSprint","startdate","moment","EyeOutlined","ArrowRightOutlined","DeleteOutlined","BacklogContainer","SelectOutlined","AlertOutlined","EllipsisOutlined","toggle","DraggableContainer","useDragHandle","disableAutoscroll","helperClass","onSortEnd","oldIndex","newIndex","newData","arrayMoveImmutable","concat","el","DraggableBodyRow","restProps","findIndex","isOtherSprints","otherSprints","openEdit","rx","move_user_story","MinusCircleOutlined","WarningOutlined","NodeIndexOutlined","xs","rowKey","components","wrapper","row","showHeader","onChangeUserStoryModal","ProjectBacklog","user_story_modal","selected_user_story","load_backlog_data","move_to_sprint","SprintContainer","startSprint","loadSprints","onChangeUserStoryStatus","todo","process","done","userStory","CaretDownOutlined","CaretRightOutlined","SyncOutlined","CheckCircleOutlined","openNewUserStory","ProjectSprints","isEditModal","modalType","sprint_list","getAllSprints","handleModal","openSprintCreateModal","openSprintUpdateModal","p","responsive","elements","line","tension","plugins","legend","position","ProjectReportsBurnup","burnDown","burnUp","velocity","selectedSprint","loadBurnUp","burnUpLabel","burnUpIdeal","burnUpRemainingEffortData","burnUpData","pre","setHours","remainingEffortPoints","idealPoints","labels","datasets","borderColor","fill","ProjectReportsBurndown","loadBurnDown","burnDownLabel","burnDownIdeal","burnDownRemainingEffortData","burnDownData","ProjectReportsVelocity","loadVelocity","velocityLabels","velocityIdeal","velocityDone","ideal","sprintVelocity","fillColor","scales","yAxes","ticks","beginAtZero","addProjectMembersColumns","ProjectTeams","team","addProjectMembers","getTeam","_onSearchUsers","addProjectMemberModalVisibility","managerTeam","otherTeam","corporateEmployee","ProjectNotifications","inner_route_home","inner_route_editor","DocsModal","onCreate","navigateToEdit","ProjectDocsAll","documents","load_all_documents","openCreateNewDoc","openEditor","innerRouters","modifiedDate","toolbarOptions","toolbar","ProjectDocsEditor","saving","onChangeTitle","onSave","doc","offEditor","setInterval","spin","modules","ProjectDocs","AllDocs","DocEditor","ProjectSettings","AppViews","fallback","lazy","ProjectSPPPoker","ProjectTeam","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","getLayoutGutter","paddingLeft","paddingRight","from","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","classList","add","removeBodyClass","currentAppLocale","Array","dark","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","initials","shift","pop","navTree","route","hasOwnProperty","cutHex","h","substring","parseInt","hexToG","hexToB","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","input","screens","breakpoints","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.13493ba8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const STORE_PROJECT_ID = 'STORE_PROJECT_ID';\r\nexport const STORE_PROJECT_DATA = 'STORE_PROJECT_DATA';\r\n","//BASE URLS\r\nexport const SCRUM_PEPPER_TESTING_BASE_URL     = `http://143.110.239.13:8080/sppm-api`;\r\nexport const SCRUM_PEPPER_PRODUCTION_BASE_URL  = `http://localhost:8080`;\r\nexport const URL_TYPE = 1;\r\n//API URLS\r\nexport const SCRUM_PEPPER_API_URL  = (status) => `${status === 1 ? SCRUM_PEPPER_TESTING_BASE_URL  : SCRUM_PEPPER_PRODUCTION_BASE_URL}/v1/`;\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      // return '/img/logo-sm-white.png'\r\n      return '/img/sp-logo1.png'\r\n    }\r\n    // return '/img/logo-white.png'\r\n    return '/img/sp-logo1.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    // return '/img/logo-sm.png'\r\n    return '/img/sp-logo1.png'\r\n  }\r\n  // return '/img/logo.png'\r\n  return '/img/sp-logo1.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","export const STORE_CORPORATE_ID = 'STORE_CORPORATE_ID';\r\n","export const SPINNER_HANDLER = 'SPINNER_HANDLER';\r\n","export const CHANGE_NAVIGATION = 'CHANGE_NAVIGATION';\r\n","import * as actions from '../constants/Corporate';\r\n\r\nexport const storeCorporateId=(data)=>{\r\n    return {\r\n        type: actions.STORE_CORPORATE_ID,\r\n        value: data\r\n    }\r\n};\r\n","export const STORE_USER = 'STORE_USER';\r\nexport const REMOVE_USER = 'STORE_USER';\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import * as actions from '../constants/Spinner'\r\n\r\nexport const handlerSpinner=(data)=>{\r\n    return {\r\n        type: actions.SPINNER_HANDLER,\r\n        value: data\r\n    }\r\n};\r\n","import * as actions from '../constants/Navigation'\r\n\r\nexport const handlerNavigation=(data)=>{\r\n    return {\r\n        type: actions.CHANGE_NAVIGATION,\r\n        value: data\r\n    }\r\n};\r\n","import * as actions from '../constants/Project'\r\n\r\nexport const handleProjectId=(data)=>{\r\n    return {\r\n        type: actions.STORE_PROJECT_ID,\r\n        value: data\r\n    }\r\n};\r\n\r\nexport const handleProjectData=(data)=>{\r\n    return {\r\n        type: actions.STORE_PROJECT_DATA,\r\n        value: data\r\n    }\r\n};\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import * as actions from '../constants/Corporate';\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initState = {\r\n    corporate_id: 0,\r\n    id: 1\r\n};\r\n\r\nconst corporate = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.STORE_CORPORATE_ID:\r\n            console.log(\"corporate_id\", action.value);\r\n            return {\r\n                ...state,\r\n                corporate_id: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"scrum-\",\r\n    key: \"corporate\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, corporate )\r\n","import * as actions from '../constants/Spinner';\r\n\r\nconst initState = {\r\n    loading: false\r\n};\r\n\r\nconst spinner = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.SPINNER_HANDLER:\r\n            return {\r\n                ...state,\r\n                loading: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default spinner;\r\n","import * as actions from '../constants/Navigation';\r\n\r\nconst initState = {\r\n    navigation: 1\r\n};\r\n\r\nconst Navigation = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.CHANGE_NAVIGATION:\r\n            return {\r\n                ...state,\r\n                navigation: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Navigation;\r\n","import * as actions from '../constants/Project';\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initState = {\r\n    id: 0,\r\n    project: null\r\n};\r\n\r\nconst Project = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.STORE_PROJECT_ID:\r\n            console.log(\"YOYO: \", action.value)\r\n            return {\r\n                ...state,\r\n                id: action.value.id,\r\n                project: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst persistConfig = {\r\n    keyPrefix: \"scrum-\",\r\n    key: \"project\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, Project )\r\n\r\n","export const STORE_CURRENT_DOCUMENT = 'STORE_CURRENT_DOCUMENT';\r\nexport const REMOVE_CURRENT_DOCUMENT = 'REMOVE_CURRENT_DOCUMENT';\r\n","import * as actions from '../constants/Documents';\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initState = {\r\n    document: null\r\n};\r\n\r\nconst documents = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.STORE_CURRENT_DOCUMENT:\r\n            return {\r\n                ...state,\r\n                document: action.value\r\n            };\r\n        case actions.REMOVE_CURRENT_DOCUMENT:\r\n            return {\r\n                ...state,\r\n                document: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"scrum-\",\r\n    key: \"document\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, documents )\r\n","export const STORE_CURRENT_POKER_ROOM = 'STORE_CURRENT_POKER';\r\nexport const REMOVE_CURRENT_POKER_ROOM = 'REMOVE_CURRENT_POKER';\r\n","import * as actions from '../constants/Poker';\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initState = {\r\n    room: null\r\n};\r\n\r\nconst poker = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.STORE_CURRENT_POKER_ROOM:\r\n            return {\r\n                ...state,\r\n                room: action.value\r\n            };\r\n        case actions.REMOVE_CURRENT_POKER_ROOM:\r\n            return {\r\n                ...state,\r\n                room: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"scrum-\",\r\n    key: \"poker\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, poker )\r\n","import * as actions from '../constants/User';\r\nimport {persistReducer} from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initState = {\r\n    user: null\r\n};\r\n\r\nconst user = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.STORE_USER:\r\n            return {\r\n                ...state,\r\n                user: action.value\r\n            };\r\n        case actions.REMOVE_USER:\r\n            return {\r\n                ...state,\r\n                user: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"scrum-\",\r\n    key: \"user\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, user )\r\n","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport CorporateReducer from './Corporate';\r\nimport SpinnerReducer from './Spinner';\r\nimport NavigationReducer from './Navigation';\r\nimport ProjectReducer from './Project';\r\nimport Documents from \"./Documents\";\r\nimport Poker from \"./Poker\";\r\nimport User from \"./User\";\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    corporateReducer: CorporateReducer,\r\n    spinnerReducer: SpinnerReducer,\r\n    navigationReducer: NavigationReducer,\r\n    projectReducer: ProjectReducer,\r\n    documentReducer: Documents,\r\n    pokerReducer: Poker,\r\n    userReducer: User\r\n});\r\n\r\nexport default reducers;\r\n","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\nimport {persistStore, persistReducer} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n  const persistConfig = {\r\n    key: \"root\",\r\n    storage\r\n  };\r\n\r\n  const persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\n  const store = createStore(persistedReducer, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n  const persistor = persistStore(store);\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import {\r\n  DashboardOutlined,\r\n  HomeOutlined,\r\n  UnorderedListOutlined,\r\n  RedoOutlined,\r\n  AreaChartOutlined,\r\n  TeamOutlined,\r\n  SettingOutlined,\r\n  BookOutlined,\r\n  BellOutlined,\r\n  ClockCircleOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n  DesktopOutlined,\r\n  ProfileOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const dashBoardNavTree = [\r\n// {\r\n//   key: 'home',\r\n//   path: `${APP_PREFIX_PATH}/home`,\r\n//   title: 'home',\r\n//   icon: DashboardOutlined,\r\n//   breadcrumb: false,\r\n//   submenu: []\r\n// },\r\n  {\r\n    key: 'project',\r\n    path: `${APP_PREFIX_PATH}/project`,\r\n    title: 'project',\r\n    icon: ProfileOutlined ,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'corporate',\r\n    path: `${APP_PREFIX_PATH}/corporate`,\r\n    title: 'corporate',\r\n    icon: DesktopOutlined ,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  // {\r\n  // key: 'profile',\r\n  // path: `${APP_PREFIX_PATH}/profile`,\r\n  // title: 'profile',\r\n  // icon: UserOutlined ,\r\n  // breadcrumb: false,\r\n  // submenu: []\r\n  // },\r\n  {\r\n    key: 'invitations',\r\n    path: `${APP_PREFIX_PATH}/invitation`,\r\n    title: 'Invitations',\r\n    icon: MailOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport const projectManagementNavTree = [\r\n  {\r\n    key: 'User Story',\r\n    path: ``,\r\n    title: 'User Story',\r\n    icon: UnorderedListOutlined,\r\n    breadcrumb: false,\r\n    submenu: [\r\n      {\r\n        key: 'Backlog',\r\n        path: `${APP_PREFIX_PATH}/project/backlog`,\r\n        title: 'Backlog',\r\n        icon: UnorderedListOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Sprints',\r\n        path: `${APP_PREFIX_PATH}/project/sprints`,\r\n        title: 'Sprints',\r\n        icon: RedoOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n    ]\r\n  },\r\n    {\r\n    key: 'Estimations',\r\n    path: ``,\r\n    title: 'Estimations',\r\n    icon: ClockCircleOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'SPP Poker',\r\n        path: `${APP_PREFIX_PATH}/project/spp-poker`,\r\n        title: 'SPP Poker',\r\n        icon: ClockCircleOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    key: 'Reports',\r\n    path: ``,\r\n    title: 'Reports',\r\n    icon: AreaChartOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'Burn Up Chart',\r\n        path: `${APP_PREFIX_PATH}/project/reports-burnup`,\r\n        title: 'Burn Up',\r\n        icon: AreaChartOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Burn Down Chart',\r\n        path: `${APP_PREFIX_PATH}/project/reports-burndown`,\r\n        title: 'Burn Down',\r\n        icon: AreaChartOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Velocity',\r\n        path: `${APP_PREFIX_PATH}/project/reports-velocity`,\r\n        title: 'Sprint Velocity',\r\n        icon: AreaChartOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    key: 'Other',\r\n    path: ``,\r\n    title: 'Other',\r\n    icon: TeamOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'Team',\r\n        path: `${APP_PREFIX_PATH}/project/team`,\r\n        title: 'Team',\r\n        icon: TeamOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Notifications',\r\n        path: `${APP_PREFIX_PATH}/project/notifications`,\r\n        title: 'Notifications',\r\n        icon: BellOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Docs',\r\n        path: `${APP_PREFIX_PATH}/project/docs`,\r\n        title: 'Docs',\r\n        icon: BookOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n      {\r\n        key: 'Settings',\r\n        path: `${APP_PREFIX_PATH}/project/settings`,\r\n        title: 'Settings',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        submenu: []\r\n      },\r\n    ]\r\n  },\r\n]\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport * as navigationConfig from '../../configs/NavigationConfig';\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// $&$&\r\n\r\n    let navigationBar = navigationConfig.dashBoardNavTree;\r\n    if(props.navigation==2) {\r\n        navigationBar = navigationConfig.projectManagementNavTree;\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n\r\n      {navigationBar.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n\r\n    let navigationBar = navigationConfig.dashBoardNavTree;\r\n    if(props.navigation==2) {\r\n        navigationBar = navigationConfig.projectManagementNavTree;\r\n    }\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n\r\n\r\n        {navigationBar.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName=\"top-nav-menu\"\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, navigationReducer }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  const { navigation } = navigationReducer;\r\n  return { sideNavTheme, topNavColor, navigation };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport {Button, Layout, Tooltip} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\nimport './SideNav.scss';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as spinner_actions from \"../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../redux/actions/Navigation\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true, navigation, handleNavigation, history, project }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization, navigation, handleNavigation, history, project}\r\n\r\n  const move_to_back = () => {\r\n    handleNavigation(1);\r\n    navigate_to_project();\r\n  }\r\n\r\n  const navigate_to_project = () => {\r\n    props.history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Sider \r\n      // className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`}\r\n      className={`side-nav`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={navCollapsed}\r\n      style={{overflowY: 'auto', boxShadow: '10px 0 34px -2px #888'}}\r\n    >\r\n\r\n      {\r\n        navigation==2?\r\n        <div className={'sp-side-nav'}>\r\n          <div>\r\n            <Tooltip title=\"Go Back\">\r\n              <Button type=\"primary\" shape=\"circle\" icon={<LeftOutlined />} onClick={move_to_back} />\r\n            </Tooltip>\r\n          </div>\r\n\r\n          <div>\r\n            {\r\n              props.project!=null?props.project.projectName:\"\"\r\n            }\r\n          </div>\r\n        </div>:null\r\n      }\r\n\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, navigationReducer, projectReducer }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  const { navigation } = navigationReducer;\r\n  const { project } = projectReducer;\r\n  return { navCollapsed, sideNavTheme, navigation, project }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n    handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n    handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SideNav));\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './spinner-layer.scss'\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover, loading } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover} ma-spinner-layer`} style={{display: loading?'block':'none'}}>\r\n\t\t\t<Spin\r\n\t\t\t\t// indicator={Icon}\r\n\t\t\t\tsize=\"large\"\r\n\t\t\t\tstyle={{marginTop: '50px'}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <span><SettingOutlined className=\"nav-icon mr-0\" /></span>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport * as navigationConfig from \"../../../configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tconsole.log(\"GGGGGGGGGGGGGGG : \", navigationTree)\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig.dashBoardNavTree)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Dropdown, Layout, Menu} from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, UserOutlined, DownOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport Cookies from \"js-cookie\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\n\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  const logout = () => {\r\n    Cookies.remove('68e78905f4c');\r\n    Cookies.remove('68e75190f4c');\r\n    // this.setState({loading: false});\r\n    props.history.push(\"/auth/login\");\r\n  }\r\n\r\n  const gotToProfile = () => {\r\n    props.history.push(\"/app/profile\");\r\n  }\r\n\r\n  let menu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <a onClick={gotToProfile}>\r\n            Profile\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item danger><a onClick={logout}>Logout</a></Menu.Item>\r\n      </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            {/*<NavPanel direction={direction} />*/}\r\n\r\n            <Dropdown overlay={menu}>\r\n              <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                <UserOutlined /> My Account <DownOutlined />\r\n              </a>\r\n            </Dropdown>\r\n\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(withRouter(HeaderNav));\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport * as navigationConfig from \"../../configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.dashBoardNavTree.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React from \"react\";\r\nimport {\r\n    Skeleton,\r\n    Switch,\r\n    Card,\r\n    Avatar,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Modal,\r\n    Input,\r\n    Form,\r\n    message,\r\n    Upload,\r\n    notification\r\n} from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../../../assets/less/custom-styles/sp-button.scss'\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport * as corporate_actions from '../../../redux/actions/Corporate';\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst size = 'small'\r\nconst rules = {\r\n    corporate_name: [\r\n        {\r\n            required: true,\r\n            message: 'Please input corporate name'\r\n        }\r\n    ],\r\n    address: [\r\n        {\r\n            required: true,\r\n            message: 'Please input address'\r\n        }\r\n    ],\r\n    contact_number_1: [\r\n        {\r\n            required: true,\r\n            message: 'Please input contact number 1'\r\n        }\r\n    ],\r\n    email: [\r\n        {\r\n            required: true,\r\n            message: 'Please input corporate email address'\r\n        },\r\n        {\r\n            type: 'email',\r\n            message: 'Please enter a validate email!'\r\n        }\r\n    ],\r\n}\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nclass Corporate extends React.Component{\r\n\r\n    state = {\r\n        visible: false,\r\n\r\n        loading: false,\r\n        imageUrl: '',\r\n        loading_button: false,\r\n\r\n        // create a corporate\r\n        name: '',\r\n        address: '',\r\n        contactNumber1: '',\r\n        contactNumber2: '',\r\n        email: '',\r\n        corporate_long: null,\r\n\r\n        // my corporates\r\n        my_corporates: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log(\"Corporates\")\r\n        this.loadMyCorporates();\r\n    }\r\n\r\n    loadMyCorporates = () => {\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        axios.get(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/my-corporates`, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({my_corporates: res.data.body});\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n    };\r\n\r\n\r\n\r\n    setVisible = e => {\r\n        this.setState({visible: false})\r\n    }\r\n\r\n    beforeUpload = (file) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl: imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n            console.log(\"OK\");\r\n        }\r\n    };\r\n\r\n    openCorporateCreateModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    }\r\n\r\n    avatarUpload = file => {\r\n        // const userId = this.props.userdetail.data.data.id;\r\n        const data = new FormData();\r\n        data.append('file', file.file);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryqTqJIxvkWFYqvP5s'\r\n            },\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/A2b4-8a486269971ed2326920`, data, config)\r\n            .then(res => {\r\n                console.log(res.data.url);\r\n                console.log(res)\r\n                this.setState({\r\n                    imageUrl: res.data.url,\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    handleSubmitCreateCorporate = values => {\r\n        this.setState({\r\n            loading_button: true\r\n        });\r\n\r\n        let request_body = {\r\n            name: values.corporate_name,\r\n            address: values.address,\r\n            contactNumber1: values.contact_number_1,\r\n            contactNumber2: values.contact_number_2==undefined?null:values.contact_number_2,\r\n            email: values.email,\r\n            corporateLogo: this.state.imageUrl\r\n        };\r\n        console.log(\"request_body: \", request_body)\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"post\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/create`, request_body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    const args = {\r\n                        message: response.data.msg,\r\n                        // description: 'Please login to the PM tool for access. \\nyou will redirect to the login page in next 3 seconds.',\r\n                        // duration: 1000\r\n                    };\r\n                    notification.open(args);\r\n                    console.log(response);\r\n                    this.resetCorporateInputs();\r\n                    this.setState({visible: false, loading_button: false})\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // create new corporate\r\n    onChangeCorporateName = e => {this.setState({name: e.target.value})};\r\n    onChangeCorporateAddress = e => {this.setState({address: e.target.value})};\r\n    onChangeCorporateEmail = e => {this.setState({email: e.target.value})};\r\n    onChangeCorporateContact1 = e => {this.setState({contactNumber1: e.target.value})};\r\n    onChangeCorporateContact2 = e => {this.setState({contactNumber1: e.target.value})};\r\n    //reset\r\n    resetCorporateInputs = () => {\r\n        this.setState({name: '', address: '', email: '', contactNumber1: '', contactNumber2: '', imageUrl: ''})\r\n    };\r\n\r\n\r\n    onClickCorporateCard = value => {\r\n        let corporateHandler = this.props.corporateHandler(value);\r\n        this.moveToCorporateMange();\r\n    };\r\n\r\n    moveToCorporateMange = () => {\r\n        this.props.history.push(\"/app/corporate/manage\");\r\n    };\r\n\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                <div style={{ marginTop: 8 }}>Upload Logo</div>\r\n            </div>\r\n        );\r\n\r\n        let show_skeleton = true;\r\n        let skeleton = <Row>\r\n                <Col sm={24} md={12} lg = {6} xl={6}>\r\n                    <Card\r\n                        style={{ width: 300, marginTop: 16 }}\r\n                    >\r\n                        <Skeleton loading={true} avatar active>\r\n                            <Meta\r\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                                title=\"Card title\"\r\n                                description=\"This is the description\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={24} md={12} lg = {6} xl={6}>\r\n                    <Card\r\n                        style={{ width: 600, marginTop: 16 }}\r\n                    >\r\n                        <Skeleton loading={true} avatar active>\r\n                            <Meta\r\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                                title=\"Card title\"\r\n                                description=\"This is the description\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={24} md={12} lg = {6} xl={6}>\r\n                    <Card\r\n                        style={{ width: 300, marginTop: 16 }}\r\n                    >\r\n                        <Skeleton loading={true} avatar active>\r\n                            <Meta\r\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\r\n                                title=\"Card title\"\r\n                                description=\"This is the description\"\r\n                            />\r\n                        </Skeleton>\r\n                    </Card>\r\n                </Col>\r\n            </Row>;\r\n\r\n        let my_corporate_list = [];\r\n        if(this.state.my_corporates!==null && this.state.my_corporates!=='' && this.state.my_corporates!==undefined) {\r\n            if(this.state.my_corporates.length!=0) {\r\n                show_skeleton = false;\r\n               this.state.my_corporates.map(val => {\r\n                   let x = <div>\r\n                       <div><span>Your Role: </span>{val.corporateAccessType}</div>\r\n                       <div><span>Status: </span>{val.corporate.statusType}</div>\r\n                   </div>\r\n\r\n                    let data = <Col sm={24} md={12} lg = {12} xl={12}>\r\n                        <Card\r\n                            hoverable\r\n                            style={{ width: 600, marginTop: 16, minHeight:150, border: '1px solid black', cursor: 'pointer' }}\r\n                            onClick={()=>this.onClickCorporateCard(val.corporate.id)}\r\n                        >\r\n                            <Skeleton loading={false} avatar active>\r\n                                <Meta\r\n                                    avatar={<Avatar src={val.corporate.corporateLogo} />}\r\n                                    title={val.corporate.name}\r\n                                    description={x}\r\n                                />\r\n                            </Skeleton>\r\n\r\n                        </Card>\r\n                    </Col>;\r\n                   my_corporate_list.push(data);\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                {/*=============================== create a corporate =================================*/}\r\n                <Modal\r\n                    title=\"Create a corporate\"\r\n                    centered\r\n                    visible={this.state.visible}\r\n                    // onOk={() => this.setVisible(false)}\r\n                    onCancel={() => this.setVisible(false)}\r\n                    width={1000}\r\n                    footer={null}\r\n                >\r\n\r\n                    <div>\r\n                        <Form layout=\"vertical\" onFinish={this.handleSubmitCreateCorporate}>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24}>\r\n                                    <Upload\r\n                                        name=\"avatar\"\r\n                                        listType=\"picture-card\"\r\n                                        className=\"avatar-uploader\"\r\n                                        showUploadList={false}\r\n                                        customRequest={this.avatarUpload}\r\n                                        beforeUpload={this.beforeUpload}\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                        {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                                    </Upload>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item\r\n                                        name=\"corporate_name\"\r\n                                        label=\"Corporate Name\"\r\n                                        rules={rules.corporate_name}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input placeholder={'Corporate Name'} value={this.state.name} onChange={this.onChangeCorporateName} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item\r\n                                        name=\"address\"\r\n                                        label=\"Corporate Address\"\r\n                                        rules={rules.address}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input.TextArea placeholder={'Corporate Address'} value={this.state.address} onChange={this.onChangeCorporateAddress} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        label=\"Corporate Email\"\r\n                                        rules={rules.email}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input placeholder={'Corporate Email'} value={this.state.email} onChange={this.onChangeCorporateEmail} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={11} lg={11} xl={11}>\r\n                                    <Form.Item\r\n                                        name=\"contact_number_1\"\r\n                                        label=\"Contact Number 1\"\r\n                                        rules={rules.contact_number_1}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input placeholder={'Corporate Contact Number 1'} value={this.state.contactNumber1} onChange={this.onChangeCorporateContact1} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col md={1} lg={1} xl={1}></Col>\r\n                                <Col sm={24} md={11} lg={11} xl={11}>\r\n                                    <Form.Item\r\n                                        name=\"contact_number_2\"\r\n                                        label=\"Contact Number 2\"\r\n                                        // rules={rules.contact_number_2}\r\n                                        hasFeedback\r\n                                    >\r\n                                        <Input placeholder={'Corporate Contact Number 2'} value={this.state.contactNumber2} onChange={this.onChangeCorporateContact2} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24}>\r\n                                    <Form.Item>\r\n                                        <Col sm={24} md={24} lg = {24} xl={24} className={'text-right'}>\r\n                                            <Button\r\n                                                type=\"primary\"\r\n                                                size={size}\r\n                                                className={'sp-main-btn'}\r\n                                                loading={this.state.loading_button}\r\n                                                // onClick={this.handleSubmitCreateCorporate}\r\n                                                htmlType={\"submit\"}\r\n                                            >\r\n                                                Create the corporate\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*=============================== corporates =================================*/}\r\n                <div>\r\n\r\n                    <Row>\r\n                        <Col sm={24} md={24} lg = {24} xl={24} className={'text-right'}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                icon={<PlusOutlined />}\r\n                                size={size}\r\n                                className={'sp-main-btn'}\r\n                                onClick={this.openCorporateCreateModal}\r\n                            >\r\n                                Create a corporate\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {\r\n                        show_skeleton?\r\n                            skeleton:\r\n                            <Row>{my_corporate_list}</Row>\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Corporate))\r\n","import React from \"react\";\r\nimport {\r\n    AutoComplete,\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Modal,\r\n    Row,\r\n    Table,\r\n    Tooltip,\r\n    Input,\r\n    Tabs,\r\n    Form,\r\n    Upload, Image, Select, message, Tag\r\n} from \"antd\";\r\nimport { UserOutlined, AppleOutlined, PlusOutlined, HomeOutlined, TeamOutlined, ProfileOutlined } from '@ant-design/icons';\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as corporate_actions from \"../../../../redux/actions/Corporate\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport '../../../../assets/less/custom-styles/common.scss'\r\nimport './corporatae-manage.scss'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../../../components/shared-components/Loading\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst size = 'small';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Option } = AutoComplete;\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Project Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '50%',\r\n    },\r\n    {\r\n        title: 'Created Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '20%',\r\n    }\r\n];\r\n\r\n\r\nconst member_columns_admin = [\r\n    {\r\n        title: 'Member Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: 'email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: '20%',\r\n    }\r\n];\r\n\r\nconst member_columns_employee = [\r\n    {\r\n        title: 'Member Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: 'email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        width: '35%',\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: '5%',\r\n    }\r\n];\r\n\r\nconst create_project_columns_employee = [\r\n    {\r\n        title: 'Member',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'email',\r\n        dataIndex: 'email',\r\n        key: 'email',\r\n        width: '40%',\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        width: '25%',\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: '5%',\r\n    }\r\n];\r\n\r\n\r\nconst add_new_corporate_employee_columns = [\r\n    {\r\n        title: 'User',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        width: '80%',\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: '20%',\r\n    }\r\n];\r\n\r\nclass CorporateManagementView extends React.Component {\r\n\r\n    state = {\r\n\r\n        corporate:null,\r\n        access_type:null,\r\n        employee_list:[],\r\n        projects:[],\r\n        corporate_employee_results:[],\r\n\r\n        add_corporate_employee_modal: false,\r\n        add_corporate_employee_options: [],\r\n\r\n        //create new project\r\n        create_project_modal: false,\r\n        temporary_selected_employee: null,\r\n        temporary_selected_employee_search: \"\",\r\n        temporary_selected_employee_role: 'TEAM_MEMBER',\r\n        temporary_selected_employees_list: [],\r\n        temporary_selected_employees_list_x: [],\r\n        project_name: '',\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadCorporateDetails();\r\n    }\r\n\r\n    loadCorporateDetails = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let req_obj = {\r\n            corporateId: this.props.corporateReducer.corporate_id\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/corporates-details`, req_obj, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data.success) {\r\n                    let body = res.data.body;\r\n                    let accessType = body.accessType;\r\n                    let corporate = body.corporate;\r\n                    let employeeList = body.employeeList;\r\n                    let projects = body.projects;\r\n                    this.setState({\r\n                        corporate:corporate,\r\n                        access_type:accessType,\r\n                        employee_list:employeeList,\r\n                        projects:projects\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    renderTitle = (title) => (\r\n        <span>\r\n        {title}\r\n            <a\r\n                style={{ float: 'right' }}\r\n                href=\"https://www.google.com/search?q=antd\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n      more\r\n    </a>\r\n  </span>\r\n    );\r\n\r\n\r\n    renderItem = (title, count) => ({\r\n        value: title,\r\n        label: (\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                }}\r\n            >\r\n                {title}\r\n                <span>\r\n        <UserOutlined /> {count}\r\n      </span>\r\n            </div>\r\n        ),\r\n    });\r\n\r\n\r\n    onSearchCorporateEmployees = value => {\r\n        let res = [];\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let req_obj = {\r\n            corporateId: this.props.corporateReducer.corporate_id,\r\n            search: value\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/employee/search`, req_obj, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({corporate_employee_results:res.data.body})\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n    };\r\n\r\n    onSearchUsers = e => {\r\n        let value  = e.target.value;\r\n        let res = [];\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let req_obj = {\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user/search?keyword=${value}&corporate=${this.props.corporateReducer.corporate_id}&project=${0}`, req_obj, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data.success) {\r\n                    this.setState({\r\n                        add_corporate_employee_options: res.data.body\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n\r\n    };\r\n\r\n    sendInvitations = val => {\r\n        this.props.handleSpinner(true);\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/employee/create`, val, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data.success) {\r\n                    this.setState({\r\n                        add_corporate_employee_options: res.data.body\r\n                    })\r\n                }\r\n                this.props.handleSpinner(false);\r\n                this.setState({\r\n                    add_corporate_employee_modal: false,\r\n                    add_corporate_employee_options: []\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.props.handleSpinner(false);\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    setCreateProjectModalVisibility = value => {\r\n        this.setState({create_project_modal: value});\r\n    };\r\n\r\n    addCorporateEmployeeModalVisibility = value => {\r\n        this.setState({add_corporate_employee_modal: value});\r\n    };\r\n\r\n\r\n    onSelectNewCorporateEmployeeToAdd = employee => {\r\n        this.setState({temporary_selected_employee: employee});\r\n    };\r\n\r\n    addMemberToProjectCreate = () => {\r\n      let temporarySelectedEmployee = this.state.temporary_selected_employee;\r\n      let temporarySelectedEmployeeRole = this.state.temporary_selected_employee_role;\r\n      let temporarySelectedEmployeesList = this.state.temporary_selected_employees_list;\r\n      let temporarySelectedEmployeesList_x = this.state.temporary_selected_employees_list_x;\r\n      let obj = {\r\n          member:temporarySelectedEmployee,\r\n          role:temporarySelectedEmployeeRole\r\n      }\r\n\r\n\r\n      if(temporarySelectedEmployeesList_x.includes(temporarySelectedEmployee)) {\r\n          message.info('This member already added');\r\n      } else {\r\n          temporarySelectedEmployeesList.push(obj);\r\n          temporarySelectedEmployeesList_x.push(temporarySelectedEmployee);\r\n          this.setState({\r\n              temporary_selected_employees_list: temporarySelectedEmployeesList,\r\n              temporary_selected_employees_list_x: temporarySelectedEmployeesList_x,\r\n          });\r\n          this.clearProjectTempUserAddFields();\r\n      }\r\n    };\r\n\r\n    handleChangeScrumRole = val => {\r\n        this.setState({temporary_selected_employee_role: val});\r\n    }\r\n\r\n    searchProjectTempUser = val => {\r\n        this.setState({temporary_selected_employee_search: val})\r\n    }\r\n\r\n    clearProjectTempUserAddFields = () => {\r\n        this.setState({temporary_selected_employee_search: \"\", temporary_selected_employee_role: \"TEAM_MEMBER\"})\r\n    }\r\n\r\n    removeTempMembersFromCreateProject = val => {\r\n        let temporarySelectedEmployeesList = this.state.temporary_selected_employees_list;\r\n        let temporarySelectedEmployeesList_x = this.state.temporary_selected_employees_list_x;\r\n        temporarySelectedEmployeesList.splice(val, 1);\r\n        temporarySelectedEmployeesList_x.splice(val, 1);\r\n        this.setState({\r\n            temporary_selected_employees_list: temporarySelectedEmployeesList,\r\n            temporary_selected_employees_list_x: temporarySelectedEmployeesList_x,\r\n        });\r\n    };\r\n\r\n    onChangeProjectName = val => {\r\n      this.setState({\r\n          project_name: val.target.value\r\n      })\r\n    };\r\n\r\n    create_project = () => {\r\n        this.props.handleSpinner(true);\r\n        let project_members = [];\r\n        if(this.state.project_name!=\"\") {\r\n            this.state.temporary_selected_employees_list.map(val=>{\r\n                let obj = {\r\n                    projectId: 0,\r\n                    corporateEmployeeId: val.member.id,\r\n                    scrumRole: val.role\r\n                }\r\n                project_members.push(obj);\r\n            });\r\n\r\n            let req_body={\r\n                corporateId: this.props.corporateReducer.corporate_id,\r\n                projectName: this.state.project_name,\r\n                projectMembers: project_members\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            axios.post('http://localhost:8080/v1/project/create', req_body, {headers})\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    this.props.handleSpinner(false);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.props.handleSpinner(false);\r\n                });\r\n\r\n\r\n        } else {\r\n            message.error('Please enter project name');\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        let list_add_employee_options = [];\r\n        if(this.state.add_corporate_employee_options!=null && this.state.add_corporate_employee_options!=\"\" && this.state.add_corporate_employee_options!= undefined) {\r\n            this.state.add_corporate_employee_options.map((result, index)=>{\r\n                let obj = {\r\n                    key: index,\r\n                    user: <div>\r\n                        <div>{`${result.firstName} ${result.lastName}`}</div>\r\n                        <div><span>{`${result.refNo}`}</span>{`${\" | \"}`}<span>{`${result.email}`}</span></div>\r\n                    </div>,\r\n                    action: (result.yourCorporate)? <Tag color=\"purple\">Employee</Tag>\r\n                        :\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={()=>this.sendInvitations({\r\n                                userId: result.id,\r\n                                corporateId: this.props.corporateReducer.corporate_id,\r\n                                email: result.email,\r\n                                accessType: 'CORPORATE_EMPLOYEE'\r\n                            })}\r\n                        >\r\n                            Send Invitation\r\n                        </Button>\r\n                };\r\n                list_add_employee_options.push(obj);\r\n            })\r\n        }\r\n        let options = [\r\n\r\n        ];\r\n\r\n        let employees = [];\r\n        let employee_list = [];\r\n        this.state.employee_list.map(val=>{\r\n            let obj = {\r\n                key: val.id,\r\n                name: val.user.firstName + \" \" + val.user.lastName,\r\n                email: val.user.email,\r\n                role: val.corporateAccessType,\r\n                action:  <div>\r\n                    <Button type=\"text\" primary style={{color:'#3e79f7'}}>\r\n                        Update\r\n                    </Button>\r\n                    <Button type=\"text\" danger>\r\n                        Remove\r\n                    </Button>\r\n                </div>\r\n            }\r\n            employee_list.push(obj);\r\n            employees.push(<Avatar style={{ backgroundColor: '#f56a00' }}>{val.user.firstName.charAt(0)}</Avatar>);\r\n        });\r\n\r\n        let projects = [];\r\n        this.state.projects.map(val => {\r\n            let project = val.project;\r\n            let createdDate = project.createdDate;\r\n            createdDate = createdDate.split(\"T\")[0];\r\n            let obj = {\r\n               key: project.id,\r\n               name: project.projectName,\r\n               date: createdDate,\r\n           }\r\n            projects.push(obj);\r\n        });\r\n\r\n\r\n\r\n        let mapped_corporate_employee_results = [];\r\n        if(this.state.corporate_employee_results!=null && this.state.corporate_employee_results!=\"\" && this.state.corporate_employee_results!=undefined) {\r\n            this.state.corporate_employee_results.map((val) => {\r\n                    mapped_corporate_employee_results.push(\r\n                        <Option key={val.id} value={`${val.user.firstName} ${val.user.lastName} • ${val.user.refNo}`} className={'user-search-option'}>\r\n                            <div className={'option-container'} onClick={()=>this.onSelectNewCorporateEmployeeToAdd(val)}>\r\n                                <div>\r\n                                    <Avatar src={<Image src=\"https://joeschmoe.io/api/v1/random\" style={{ width: 32 }} />} />\r\n                                </div>\r\n                                <div>\r\n                                    <div className={'topic'}>{`${val.user.firstName} ${val.user.lastName} `}<span className={'description'}>{`• ${val.user.refNo}`}</span></div>\r\n                                    <div className={'description'}>{`• ${val.user.email}`}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Option>\r\n                    )\r\n                }\r\n            );\r\n        }\r\n\r\n            let temporary_selected_employees_list = [];\r\n            this.state.temporary_selected_employees_list.map((val, index) => {\r\n                let obj = {\r\n                    key: index,\r\n                    name: val.member.user.firstName + \" \" + val.member.user.lastName,\r\n                    email: val.member.user.email,\r\n                    role: val.role,\r\n                    action:  <div>\r\n                        <Button type=\"text\" danger onClick={()=>this.removeTempMembersFromCreateProject(index)}>\r\n                            Remove\r\n                        </Button>\r\n                    </div>\r\n                }\r\n                temporary_selected_employees_list.push(obj);\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n         <>\r\n             {/*modals*/}\r\n             {/*create a project modal*/}\r\n             <Modal\r\n                 title={`Create a Project @ ${(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.name:null}`}\r\n                 centered\r\n                 // visible={this.state.visible}\r\n                 visible={this.state.create_project_modal}\r\n                 onCancel={() => this.setCreateProjectModalVisibility(false)}\r\n                 width={1000}\r\n                 footer={null}\r\n             >\r\n\r\n                 <div>\r\n                     <Form layout=\"vertical\" onFinish={this.handleSubmitCreateCorporate}>\r\n\r\n                         <Row>\r\n                             <Col sm={24} md={24} lg={24} xl={24}>\r\n                                 <Form.Item\r\n                                     name=\"project_name\"\r\n                                     label=\"Project Name\"\r\n                                     // rules={rules.corporate_name}\r\n                                     hasFeedback\r\n                                 >\r\n                                     <Input placeholder={'Project Name'} value={this.state.project_name} onChange={this.onChangeProjectName} />\r\n                                 </Form.Item>\r\n                             </Col>\r\n                         </Row>\r\n\r\n                         <Row>\r\n                             <Col sm={24} md={16} lg={16} xl={16}>\r\n                                 <AutoComplete style={{ width: '95%' }} onSearch={this.onSearchCorporateEmployees} value={this.state.temporary_selected_employee_search} onChange={this.searchProjectTempUser}placeholder=\"input here\">\r\n                                     {mapped_corporate_employee_results}\r\n                                 </AutoComplete>\r\n                             </Col>\r\n                             <Col sm={24} md={6} lg={6} xl={6}>\r\n                                 <Select defaultValue=\"TEAM_MEMBER\" value={this.state.temporary_selected_employee_role} style={{ width: '95%' }}\r\n                                         onChange={this.handleChangeScrumRole}\r\n                                 >\r\n                                     <Option value=\"TEAM_MEMBER\">Team Member</Option>\r\n                                     <Option value=\"SCRUM_MASTER\">Scrum Master</Option>\r\n                                     <Option value=\"PRODUCT_OWNER\">Product Owner</Option>\r\n                                     <Option value=\"OTHER\">Other</Option>\r\n                                 </Select>\r\n                             </Col>\r\n                             <Col sm={24} md={2} lg={2} xl={2}>\r\n                                 <Button type=\"text\" primary style={{color:'#3e79f7'}} onClick={this.addMemberToProjectCreate}>\r\n                                     Add\r\n                                 </Button>\r\n                             </Col>\r\n                         </Row>\r\n                         <Row>\r\n                             <Col sm={24} md={24} lg={24} xl={24} className={'text-center w-100 mt-5'}>\r\n                                 <Table dataSource={temporary_selected_employees_list} columns={create_project_columns_employee}/>\r\n                             </Col>\r\n                         </Row>\r\n                         <Row>\r\n                             <Col sm={24} md={24} lg = {24} xl={24} className={'text-right mt-3'}>\r\n                                 <Button\r\n                                     type=\"primary\"\r\n                                     size={size}\r\n                                     className={'sp-main-btn'}\r\n                                     onClick={this.create_project}\r\n                                 >\r\n                                     Create The Project\r\n                                 </Button>\r\n                             </Col>\r\n                         </Row>\r\n                     </Form>\r\n                 </div>\r\n             </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n             <Modal\r\n                 title={`Add Corporate Employee`}\r\n                 centered\r\n                 visible={this.state.add_corporate_employee_modal}\r\n                 onCancel={() => this.addCorporateEmployeeModalVisibility(false)}\r\n                 width={600}\r\n                 footer={null}\r\n             >\r\n                    <div className={'text-center'}>\r\n                        <AutoComplete\r\n                            dropdownClassName=\"certain-category-search-dropdown\"\r\n                            dropdownMatchSelectWidth={500}\r\n                            style={{ minWidth: '80%' }}\r\n                        >\r\n                            <Input.Search size=\"large\" placeholder=\"input here\" onChange={this.onSearchUsers}/>\r\n                        </AutoComplete>\r\n\r\n                        <Table dataSource={list_add_employee_options} columns={add_new_corporate_employee_columns}/>\r\n                    </div>\r\n             </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             <div className={'page-margin-handler'}>\r\n\r\n             <Tabs defaultActiveKey=\"1\">\r\n\r\n                 {/*tab 1*/}\r\n                 <TabPane\r\n                     tab={<span><HomeOutlined />Home</span>}\r\n                     key=\"1\"\r\n                 >\r\n\r\n\r\n                     <Row>\r\n                         <Col sm={24} md={24} lg={24} xl={24}>\r\n                             <h4>Corporate</h4>\r\n                         </Col>\r\n                         <Col sm={24} md={24} lg={24} xl={24}>\r\n                             <Card\r\n                                 style={{ width: '100%' }}\r\n                             >\r\n                                 <Row>\r\n                                     <Col sm={24} md={24} lg={4} xl={4} className={'text-center w-100'}>\r\n                                         {\r\n                                             (this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?\r\n                                                 <Avatar size={100} src={this.state.corporate.corporateLogo} />:\r\n                                                 <Avatar size={100} icon={<UserOutlined />} />\r\n                                         }\r\n                                     </Col>\r\n                                     <Col sm={24} md={24} lg={20} xl={20}>\r\n                                         <Row className={'ww'}>\r\n                                             <Col sm={24} md={24} lg={24} xl={24}>\r\n                                                 <Flex alignItems=\"center\"\r\n                                                       mobileFlex={true}\r\n                                                       className=\"mb-3 text-center\"\r\n                                                 >\r\n                                                     <h2>\r\n                                                         {(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.name:null}\r\n                                                     </h2>\r\n                                                     <Button size=\"small\" className=\"ml-2\">Edit</Button>\r\n                                                 </Flex>\r\n                                             </Col>\r\n                                         </Row>\r\n                                         <Row>\r\n                                             <Col sm={24} md={24} lg={12} xl={12}>\r\n                                                 <table className={'info-tbl'}>\r\n                                                     <tr>\r\n                                                         <td className={'topic'}>Email</td>\r\n                                                         <td className={'value-gap'}>{(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.email:null}</td>\r\n                                                     </tr>\r\n                                                     <tr>\r\n                                                         <td className={'topic'}>Address</td>\r\n                                                         <td className={'value-gap'}>{(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.address:null}</td>\r\n                                                     </tr>\r\n                                                 </table>\r\n                                             </Col>\r\n                                             <Col sm={24} md={24} lg={12} xl={12}>\r\n                                                 <table className={'info-tbl'}>\r\n                                                     <tr>\r\n                                                         <td className={'topic'}>Contact 1</td>\r\n                                                         <td className={'value-gap'}>{(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.contactNumber1:null}</td>\r\n                                                     </tr>\r\n                                                     <tr>\r\n                                                         <td className={'topic'}>Contact 2</td>\r\n                                                         <td className={'value-gap'}>{(this.state.corporate!=null && this.state.corporate!=\"\" && this.state.corporate!=undefined)?this.state.corporate.contactNumber2:\" - \"}</td>\r\n                                                     </tr>\r\n                                                 </table>\r\n                                             </Col>\r\n                                         </Row>\r\n                                     </Col>\r\n                                 </Row>\r\n                             </Card>\r\n                         </Col>\r\n                     </Row>\r\n\r\n\r\n                 </TabPane>\r\n\r\n                 {/*tab 2*/}\r\n                 <TabPane\r\n                     tab={<span><TeamOutlined  />Members</span>}\r\n                     key=\"2\"\r\n                 >\r\n                     <Row>\r\n                             <Col sm={24} md={24} lg = {24} xl={24} className={'text-right'}>\r\n                                 <Button\r\n                                     type=\"primary\"\r\n                                     icon={<PlusOutlined />}\r\n                                     size={size}\r\n                                     className={'sp-main-btn'}\r\n                                     onClick={()=>this.addCorporateEmployeeModalVisibility(true)}\r\n                                 >\r\n                                     Add Corporate Employee\r\n                                 </Button>\r\n                             </Col>\r\n                         <Col sm={24} md={24} lg={24} xl={24} className={'text-center w-100 mt-5'}>\r\n                                     <Table dataSource={employee_list} columns={this.state.access_type==\"CORPORATE_SUPER\" || this.state.access_type==\"CORPORATE_ADMIN\"?member_columns_admin:member_columns_employee}/>\r\n                         </Col>\r\n                     </Row>\r\n                 </TabPane>\r\n\r\n                 {/*tab 3*/}\r\n                 <TabPane\r\n                     tab={<span><ProfileOutlined  />\r\n                     {\r\n                         this.state.access_type==\"CORPORATE_SUPER\" || this.state.access_type==\"CORPORATE_ADMIN\" ? \"Corporate Projects\" : \"My Projects\"\r\n                     }\r\n                     </span>}\r\n                     key=\"3\"\r\n                 >\r\n                     <Row>\r\n                         <Col sm={24} md={24} lg = {24} xl={24} className={'text-right'}>\r\n                             <Button\r\n                                 type=\"primary\"\r\n                                 icon={<PlusOutlined />}\r\n                                 size={size}\r\n                                 className={'sp-main-btn'}\r\n                                 onClick={()=>this.setCreateProjectModalVisibility(true)}\r\n                             >\r\n                                 Create a Project\r\n                             </Button>\r\n                         </Col>\r\n                     </Row>\r\n                     <Row>\r\n                         <Col sm={24} md={24} lg={24} xl={24} className={'text-center mt-5'}>\r\n                             <AutoComplete\r\n                                 dropdownClassName=\"certain-category-search-dropdown\"\r\n                                 dropdownMatchSelectWidth={500}\r\n                                 style={{ minWidth: '80%' }}\r\n                                 options={options}\r\n                             >\r\n                                 <Input.Search size=\"large\" placeholder=\"input here\" />\r\n                             </AutoComplete>\r\n                         </Col>\r\n                         <Col sm={24} md={24} lg={24} xl={24} className={'text-center w-100 mt-5'}>\r\n                             <Table dataSource={projects} columns={columns}/>\r\n                         </Col>\r\n                     </Row>\r\n                 </TabPane>\r\n\r\n             </Tabs>\r\n\r\n             </div>\r\n         </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CorporateManagementView));\r\n","export const inner_route_new_room = \"/app/project/spp-poker/new\";\r\nexport const inner_route_play = \"/app/project/spp-poker/play\";\r\nexport const inner_route_home = \"/app/project/spp-poker\";\r\n","import React from \"react\";\r\nimport {Button, Form, Input, Modal, Select, message} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\nimport * as spinner_actions from \"../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../redux/actions/Project\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass SppPokerModal extends React.Component{\r\n\r\n    state = {\r\n        id: 0,\r\n        projectId: 0,\r\n        sprintId: 0,\r\n        description: \"\",\r\n        status: 1,\r\n        edit: true,\r\n        sprints: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_all_sprints();\r\n        if(this.props.data) {\r\n            let d = this.props.data;\r\n            this.setState({\r\n                id: d.id,\r\n                projectId: d.projectId,\r\n                sprintId: d.sprintId,\r\n                description: d.description,\r\n                status: d.status,\r\n                edit: d.status==0?false:true\r\n            })\r\n        }else {\r\n            this.setState({\r\n                id: 0,\r\n                projectId: 0,\r\n                sprintId: 0,\r\n                description: \"\",\r\n                status: 1,\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n\r\n    load_all_sprints = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/get?project=${this.props.projectReducer.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({\r\n                        sprints: response.data.body\r\n                    })\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.openModal(null, false);\r\n    }\r\n\r\n    onChangeSprint = e => {\r\n        this.setState({\r\n            sprintId: e\r\n        })\r\n    }\r\n\r\n    onChangeDescription = e => {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeStatus = e => {\r\n        this.setState({\r\n            status: e\r\n        })\r\n    }\r\n\r\n    handle_room = (type) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"post\";\r\n        if(type==\"UPDATE\") {\r\n            method = \"put\"\r\n        }\r\n\r\n        let body = {\r\n            id: this.state.id,\r\n            projectId: this.state.projectId,\r\n            sprintId: this.state.sprintId,\r\n            description: this.state.description,\r\n            status: this.state.status,\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sppoker/room/${type==\"UPDATE\"?\"update\":\"create\"}`, body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    message.success(`Chat Room ${type==\"UPDATE\"?\"updated\":\"started\"} successfully`);\r\n                    this.props.startRoom(response.data.body);\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let sprints = this.state.sprints;\r\n\r\n        return(\r\n            <Modal\r\n                title=\"Basic Modal\"\r\n                visible={this.props.isEditVisible}\r\n                onCancel={this.onClose}\r\n                footer={false}\r\n                className={'sprint-edit-modal'}\r\n            >\r\n                <div>\r\n                    <Form\r\n                        layout=\"vertical\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Note\"\r\n                        >\r\n                            <Input.TextArea placeholder=\"input placeholder\" value={this.state.goal} onChange={this.onChangeDescription} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Sprint\"\r\n                        >\r\n                        <Select style={{ width: 120 }} onChange={this.onChangeSprint}>\r\n                            {\r\n                                sprints.map((result, index)=><Option value={result.id}>{result.sprintName}</Option>)\r\n                            }\r\n                        </Select>\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            this.state.id!=0?\r\n                                <Form.Item\r\n                                    label=\"Status\"\r\n                                >\r\n                                    <Select style={{ width: 120 }} onChange={this.onChangeStatus} disble={!this.state.edit}>\r\n                                        <Option value={1}>Ongoing </Option>\r\n                                        <Option value={1}>Stopped </Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                :\r\n                                null\r\n                        }\r\n\r\n\r\n                        <Form.Item className={'text-right'}>\r\n                            {\r\n                                this.state.id==0?\r\n                                    <Button type=\"primary\" onClick={()=>this.handle_room(\"START\")}>Start</Button>\r\n                                    :\r\n                                    <Button type=\"primary\" onClick={()=>this.handle_room(\"UPDATE\")}>Update</Button>\r\n                            }\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SppPokerModal);\r\n","import * as actions from '../constants/Documents';\r\n\r\nexport const storeCurrentDocument=(data)=>{\r\n    return {\r\n        type: actions.STORE_CURRENT_DOCUMENT,\r\n        value: data\r\n    }\r\n};\r\n\r\nexport const removeCurrentDocument=()=>{\r\n    return {\r\n        type: actions.REMOVE_CURRENT_DOCUMENT,\r\n        value: null\r\n    }\r\n};\r\n\r\n","import * as actions from '../constants/Poker';\r\n\r\nexport const storePokerRoom=(data)=>{\r\n    return {\r\n        type: actions.STORE_CURRENT_POKER_ROOM,\r\n        value: data\r\n    }\r\n};\r\n\r\nexport const removePokerRoom=()=>{\r\n    return {\r\n        type: actions.REMOVE_CURRENT_POKER_ROOM,\r\n        value: null\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Button, message, Table} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../../server/base_urls\";\r\nimport SppPokerModal from \"../../../../../components/sp-componenets/spp-poker-components/spp-poker-modal\";\r\nimport * as innerRoutes from \"./poker-inner-routers\";\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../../redux/actions/Documents\";\r\nimport * as poker_actions from \"../../../../../redux/actions/Poker\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Start Date & Time',\r\n        dataIndex: 'sdate',\r\n        key: 'sdate',\r\n    },\r\n    {\r\n        title: 'End Date & Time',\r\n        dataIndex: 'edate',\r\n        key: 'edate',\r\n    },\r\n    {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        key: 'note',\r\n    },\r\n    {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nclass ProjectSppPokerAll extends React.Component {\r\n\r\n    state = {\r\n        isEdit: false,\r\n        selectedRoom: null,\r\n        rooms: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_all_rooms();\r\n    }\r\n\r\n    load_all_rooms = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sppoker/room/get/${this.props.projectReducer.project.id}`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n\r\n                    this.setState({rooms: response.data.body})\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    start_room = (data) => {\r\n        this.props.storePokerRoom(data);\r\n        // this.props.history.push(innerRoutes.inner_route_play);\r\n        this.load_all_rooms();\r\n        this.setState({\r\n            isEdit: false,\r\n            selectedRoom: null\r\n        })\r\n    }\r\n\r\n    start_room2 = (data) => {\r\n        this.props.storePokerRoom(data);\r\n        this.props.history.push(innerRoutes.inner_route_play);\r\n        // this.load_all_rooms();\r\n        this.setState({\r\n            isEdit: false,\r\n            selectedRoom: null\r\n        })\r\n    }\r\n\r\n    handle_modal = (val, open) =>{\r\n        this.setState({\r\n            isEdit: open,\r\n            selectedRoom: val\r\n        })\r\n        // this.props.history.push(innerRoutes.inner_route_new_room);\r\n    }\r\n\r\n    render() {\r\n        let {rooms} = this.state;\r\n        let room_list = [];\r\n        rooms.map((result, index)=>{\r\n\r\n            let cd = result.startedDate;\r\n            let cdSplit = cd.split('T');\r\n            let cd1 = cdSplit[0];\r\n            let cd2 = cdSplit[1].split('.')[0];\r\n\r\n            let md = result.closeDate;\r\n            let md1 = \"\";\r\n            let md2 = \"\";\r\n            if(md!=null) {\r\n                let mdSplit = md.split('T');\r\n                md1 = mdSplit[0];\r\n                md2 = mdSplit[1].split('.')[0];\r\n            }\r\n\r\n            let obj = {\r\n                sdate: `${cd1} ${cd2}`,\r\n                edate: md!=null?`${md1} ${md2}`:\"-\",\r\n                note: result.note,\r\n                action: <Button type={'text'} onClick={()=>this.start_room2(result)}>Join</Button>,\r\n            }\r\n\r\n            room_list.push(obj);\r\n        })\r\n        return(\r\n            <div>\r\n                <div style={{fontWeight: 'bold'}}>All Poker Rooms</div>\r\n                <br/>\r\n                <h3>SPP Poker</h3>\r\n                {\r\n                    this.state.isEdit?\r\n                    <SppPokerModal isEditVisible={this.state.isEdit} openModal={this.handle_modal} data={this.state.selectedRoom} startRoom={this.start_room} />\r\n                    : null\r\n                }\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Button type=\"primary\" onClick={()=>this.handle_modal(null, true)}>New Room</Button>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <Table dataSource={room_list} columns={columns} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data)),\r\n        storePokerRoom: (data) => dispatch(poker_actions.storePokerRoom(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSppPokerAll);\r\n","import React from \"react\";\r\nimport {Button, Col, Form, Input, Row, Select} from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass ProjectSppPokerNew extends React.Component {\r\n\r\n    state = {\r\n        id: 0,\r\n        projectId: 0,\r\n        sprintId: 0,\r\n        description: \"\",\r\n        status: 1,\r\n        edit: true,\r\n        sprints: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"XX \")\r\n    }\r\n\r\n    onChangeSprint = e => {\r\n        this.setState({\r\n            sprintId: e\r\n        })\r\n    }\r\n\r\n    onChangeDescription = e => {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeStatus = e => {\r\n        this.setState({\r\n            status: e\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let sprints = this.state.sprints;\r\n\r\n        return(\r\n            <div>\r\n                <div><span>All Poker Rooms</span><span>{`${\" > \"}`}</span><span style={{fontWeight: 'bold'}}>New Poker Room</span></div>\r\n                <br/>\r\n                <h3>New Poker Room</h3>\r\n                <div>\r\n                    <Form\r\n                        layout=\"vertical\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Note\"\r\n                        >\r\n                            <Input.TextArea placeholder=\"input placeholder\" value={this.state.description} onChange={this.onChangeDescription} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Sprint\"\r\n                        >\r\n                            <Select style={{ width: 120 }} onChange={this.onChangeSprint}>\r\n                                {\r\n                                    sprints.map((result, index)=><Option value={result.id}>{result.sprintName}</Option>)\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        {\r\n                            this.state.id!=0?\r\n                                <Form.Item\r\n                                    label=\"Status\"\r\n                                >\r\n                                    <Select style={{ width: 120 }} onChange={this.onChangeStatus} disble={!this.state.edit}>\r\n                                        <Option value={1}>Ongoing </Option>\r\n                                        <Option value={1}>Stopped </Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                :\r\n                                null\r\n                        }\r\n\r\n\r\n                        <Form.Item className={'text-right'}>\r\n                            {\r\n                                this.state.id==0?\r\n                                    <Button type=\"primary\" onClick={()=>this.handle_room(\"START\")}>Start</Button>\r\n                                    :\r\n                                    <Button type=\"primary\" onClick={()=>this.handle_room(\"UPDATE\")}>Update</Button>\r\n                            }\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default (ProjectSppPokerNew);\r\n","import React from \"react\";\r\nimport './poker-styles.scss'\r\nimport {Button, Col, Row, Table} from \"antd\";\r\nimport { UnorderedListOutlined } from '@ant-design/icons';\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../../redux/actions/Documents\";\r\nimport * as poker_actions from \"../../../../../redux/actions/Poker\";\r\nimport {connect} from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../../server/base_urls\";\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst fib = [\r\n    [\r\n        0,1,2,3,5,8,13,21,34,55,89,\"?\"\r\n    ]\r\n]\r\nvar stompClient =null;\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Vote',\r\n        dataIndex: 'vote',\r\n        key: 'vote',\r\n    },\r\n];\r\n\r\nclass ProjectSppPokerPlay extends React.Component {\r\n\r\n    state = {\r\n        ref: \"\",\r\n        user_stories: [],\r\n        userData:{\r\n            userid: '',\r\n            receivername: '',\r\n            connected: false,\r\n            message: ''\r\n        },\r\n        value: [],\r\n        selected_value: -1\r\n    }\r\n\r\n    componentDidMount() {\r\n        let room = this.props.pokerReducer.room;\r\n        let sprint_id = 0;\r\n        if(room.sprint!=null) {\r\n            sprint_id = room.sprint.id;\r\n        }\r\n        let userData1 = this.state.userData;\r\n        let x = {...userData1,\"userid\": this.props.userReducer.user.id};\r\n        this.setState({\r\n            ref: room.roomRef,\r\n            sprintId: sprint_id,\r\n            userData: x\r\n        })\r\n        console.log(\"Room: \", room);\r\n        if(sprint_id!=0) {\r\n            this.load_sprint_data(sprint_id);\r\n        } else {\r\n            this.load_project_data(room.project.id);\r\n        }\r\n        this.registerUser();\r\n    }\r\n\r\n    load_project_data = project_id => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story/get-project?id=${this.props.projectReducer.project.uuid}&corporate=${this.props.corporateReducer.corporate_id}`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n\r\n                    this.setState({user_stories: response.data.body})\r\n                    console.log(\"Room-p: \", response.data.body);\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    load_sprint_data = sprint_id => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story/get-sprint?id=${sprint_id}`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n\r\n                    this.setState({user_stories: response.data.body});\r\n                    console.log(\"Room-s: \", response.data.body);\r\n\r\n\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\n    registerUser=()=>{\r\n        this.connect();\r\n    }\r\n\r\n    connect =()=>{\r\n        let Sock = new SockJS('http://localhost:8081/ws');\r\n        stompClient = over(Sock);\r\n        stompClient.connect({},this.onConnected, this.onError);\r\n    }\r\n\r\n    onConnected = () => {\r\n        let userData1 = this.state.userData;\r\n        let x = {...userData1,\"connected\": true}\r\n        this.setState({userData: x});\r\n        stompClient.subscribe('/user/'+this.state.ref+'/private', this.onPrivateMessage);\r\n        this.userJoin();\r\n    }\r\n\r\n    onPrivateMessage = (payload)=>{\r\n        console.log(payload);\r\n        var payloadData = JSON.parse(payload.body);\r\n\r\n        console.log(\"VALUE: \", payloadData);\r\n\r\n        this.setState({\r\n            value: payloadData.votes\r\n        })\r\n    }\r\n\r\n    userJoin=()=>{\r\n        var chatMessage = {\r\n            senderName: this.state.userData.username,\r\n            status:\"JOIN\"\r\n        };\r\n        stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n        this.load_initial();\r\n    }\r\n\r\n\r\n    load_initial = () => {\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            // 'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"post\";\r\n\r\n        let body = {\r\n        }\r\n\r\n        axios[method](`http://localhost:8081/v1/votex/private-message-just-connect?ref=${this.state.ref}`, body, {headers: headers})\r\n            .then(async response => {\r\n                console.log(response);\r\n                if(response.data.success) {\r\n                    this.setState({\r\n                        value: response.data.body.votes\r\n                    })\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    onError = (err) => {\r\n        console.log(err);\r\n    }\r\n\r\n    sendPrivateValue=(vote)=>{\r\n        if (stompClient) {\r\n            var chatMessage = {\r\n                voter_id: this.state.userData.userid,\r\n                room_ref: this.state.ref,\r\n                candidate_id: 1,\r\n                vote: vote\r\n            };\r\n\r\n            // if(userData.username !== tab){\r\n            //     privateChats.get(tab).push(chatMessage);\r\n            //     setPrivateChats(new Map(privateChats));\r\n            // }\r\n            stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n            let userData1 = this.state.userData;\r\n            let x = {...userData1,\"message\": \"\"};\r\n            this.setState({userData: x, selected_value: vote});\r\n        }\r\n    }\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n\r\n    render() {\r\n\r\n        let cards = [];\r\n        fib[0].map((result, index)=>\r\n        {\r\n           let obj = <span className={`poker-card ${result==this.state.selected_value?`select-poker-card`:``}`} onClick={()=>this.sendPrivateValue(result)}>{result}</span>;\r\n            cards.push(obj);\r\n        });\r\n\r\n\r\n        let result_options = [];\r\n        if(this.state.value!=null) {\r\n            this.state.value.map((result, index)=>{\r\n                let obj = {\r\n                    key: index,\r\n                    name: `${result.firstName} ${result.lastName}`,\r\n                    vote: result.vote\r\n                }\r\n                result_options.push(obj);\r\n            })\r\n        }\r\n\r\n\r\n        let userStories = this.state.user_stories;\r\n        let ccs = \"\"\r\n        if(userStories!=null & userStories!=\"\" & userStories!=undefined) {\r\n            ccs = userStories[0].title;\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <div><span>All Poker Rooms</span><span>{`${\" > \"}`}</span><span style={{fontWeight: 'bold'}}>{this.state.ref}</span></div>\r\n                <br/>\r\n                <div>{`Connect: ${this.state.userData.connected}`}</div>\r\n                {/*<div>{`value: ${this.state.value}`}</div>*/}\r\n                <br/>\r\n                <div>\r\n                    <div>\r\n                        {/*<div className={'user-story-display'}>*/}\r\n                        {/*    <div className={'btn-panel'}>*/}\r\n                        {/*        <Button type={'text'}><UnorderedListOutlined /></Button>*/}\r\n                        {/*    </div>*/}\r\n                        {/*    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium animi corporis, eius expedita in minima quasi reprehenderit. Eligendi et praesentium saepe sed sunt. Aut beatae, commodi ex hic laborum molestias!*/}\r\n                        {/*</div>*/}\r\n                        <div className={'user-story-display'}>\r\n                            <div className={'btn-panel'}>\r\n                                <Button type={'text'}><UnorderedListOutlined /></Button>\r\n                            </div>\r\n                            {/*<div className={'btn-panel-2'}>*/}\r\n                            {/*    <Button type={'primary'}>Start</Button>*/}\r\n                            {/*</div>*/}\r\n\r\n                            <div>\r\n                                {\r\n                                    ccs\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={'poker-card-panel'}>\r\n\r\n                        {\r\n                            cards\r\n                        }\r\n                        \r\n                        {/*<span className={\"poker-card\"}>1</span>*/}\r\n                        {/*<span className={\"poker-card select-poker-card\"}>2</span>*/}\r\n                        {/*<span className={\"poker-card\"}>3</span>*/}\r\n                        {/*<span className={\"poker-card\"}>5</span>*/}\r\n                        {/*<span className={\"poker-card\"}>8</span>*/}\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    <div className={'vote-display'}>\r\n                        <div className={'vote-display-row'}>\r\n                            <span className={'item'}>\r\n                                <span className={'card'}>1</span>\r\n                                <span>-</span>\r\n                                <span>2</span>\r\n                            </span>\r\n                            <span className={'item'}>\r\n                                <span className={'card'}>1</span>\r\n                                <span>-</span>\r\n                                <span>2</span>\r\n                            </span>\r\n                            <span className={'item'}>\r\n                                <span className={'card'}>1</span>\r\n                                <span>-</span>\r\n                                <span>2</span>\r\n                            </span>\r\n                            <span className={'item'}>\r\n                                <span className={'card'}>1</span>\r\n                                <span>-</span>\r\n                                <span>2</span>\r\n                            </span>\r\n                            <span className={'item'}>\r\n                                <span className={'card'}>1</span>\r\n                                <span>-</span>\r\n                                <span>2</span>\r\n                            </span>\r\n                            <span className={'item-2'}>\r\n                                <Button type={'primary'}>Save</Button>\r\n                            </span>\r\n                            <span className={'item-2'}>\r\n                                <Button type={'primary'}>Retry</Button>\r\n                            </span>\r\n                        </div>\r\n                        <div className={'vote-display-tbl'}>\r\n                            <Table dataSource={result_options} columns={columns} />\r\n                        </div>\r\nm\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer,\r\n    pokerReducer: state.pokerReducer,\r\n    userReducer: state.userReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data)),\r\n        storePokerRoom: (data) => dispatch(poker_actions.storePokerRoom(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectSppPokerPlay);\r\n","import React from 'react';\r\nimport * as innerRoutes from \"./poker-inner-routers\";\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom';\r\nimport AllRooms from './project-spp-poker-all';\r\nimport NewRoom from './project-spp-poker-new';\r\nimport PlayRoom from './project-spp-poker-play';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\n\r\nclass Poker extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path={innerRoutes.inner_route_home} component={AllRooms}/>\r\n                    <Route path={innerRoutes.inner_route_new_room} component={NewRoom}/>\r\n                    <Route path={innerRoutes.inner_route_play} component={PlayRoom}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(Poker);\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Poker);\r\n","import React from \"react\";\r\nimport {Button, Table} from \"antd\";\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\r\nimport { MenuOutlined, SelectOutlined } from '@ant-design/icons';\r\nimport { arrayMoveImmutable } from 'array-move';\r\n\r\n\r\nconst DragHandle = SortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Sort',\r\n        dataIndex: 'sort',\r\n        width: 30,\r\n        className: 'drag-visible',\r\n        render: () => <DragHandle />,\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        dataIndex: 'edit',\r\n        className: 'drag-visible',\r\n    },\r\n    {\r\n        title: 'User Story',\r\n        dataIndex: 'user_story',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n    },\r\n    {\r\n        title: 'Priority',\r\n        dataIndex: 'priority',\r\n    },\r\n];\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableBody = SortableContainer(props => <tbody {...props} />);\r\n\r\nclass BacklogTable extends React.Component {\r\n\r\n    state = {\r\n        dataSource: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.prepareData();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.prepareData()\r\n    }\r\n\r\n    prepareData = () => {\r\n        let user_stories = this.props.user_stories;\r\n        let data = [];\r\n        if(user_stories!=null && user_stories!='' && user_stories!=undefined) {\r\n            user_stories.map((r, i)=>{\r\n                let obj = {\r\n                    key: i+1,\r\n                    edit: <Button type={'link'} onClick={()=>this.props.openEdit(r, i)}><SelectOutlined /></Button>,\r\n                    user_story: r.title,\r\n                    status: r.statusType,\r\n                    priority: \"\",\r\n                    index: i\r\n                }\r\n                data.push(obj);\r\n            })\r\n            this.setState({dataSource: data})\r\n        }\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(\r\n                el => !!el,\r\n            );\r\n            console.log(newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableBody\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const { dataSource } = this.state;\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n            <div>\r\n                <Table\r\n                    pagination={false}\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                    rowKey=\"index\"\r\n                    components={{\r\n                        body: {\r\n                            wrapper: this.DraggableContainer,\r\n                            row: this.DraggableBodyRow,\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BacklogTable;\r\n","import React from \"react\";\r\nimport {Button, Col, Dropdown, Input, Menu, Row, Select} from \"antd\";\r\nimport { EditOutlined, DeleteOutlined, MoreOutlined, UserAddOutlined } from '@ant-design/icons';\r\nimport './task.scss'\r\n\r\nconst { Option } = Select;\r\n\r\nclass Task extends React.Component {\r\n\r\n    state = {\r\n        task_id: 0,\r\n        is_edit_text: false,\r\n        task_name: \"\",\r\n        addMember: false,\r\n        taskStatus: \"TODO\"\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.setState({\r\n                task_id: this.props.task.id,\r\n                task_name: (this.props.task.title!=null & this.props.task.title!=undefined)?this.props.task.title:'',\r\n                taskStatus: this.props.task.statusType\r\n            })\r\n        console.log(\"Task Status: \", this.props.task.statusType);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            task_id: this.props.task.id,\r\n            task_name: (this.props.task.title!=null & this.props.task.title!=undefined)?this.props.task.title:'',\r\n            taskStatus: this.props.task.statusType\r\n        })\r\n        console.log(\"Task Status2: \", this.props.task.statusType);\r\n    }\r\n\r\n    onClickEdit = val => {\r\n        this.setState({is_edit_text: val})\r\n    };\r\n\r\n    onEditFocus = val => {\r\n        this.setState({is_edit_text: val})\r\n        if(!val) {\r\n            this.handleTask();\r\n        }\r\n    };\r\n\r\n    onChangeTaskName = e => {\r\n        this.setState({task_name: e.target.value})\r\n    }\r\n\r\n    onChangeText = e => {\r\n        if (e.key === 'Enter') {\r\n            this.onEditFocus(false);\r\n        }\r\n    }\r\n\r\n    handleTask = () => {\r\n        if(this.state.task_id==0) {\r\n            this.props.createTask(null, this.state.task_name);\r\n        } else {\r\n            this.props.updateTask(this.state.task_id, null, this.state.task_name);\r\n        }\r\n    }\r\n\r\n    openAddMember = () => {\r\n       this.props.memberModal(this.state.task_id);\r\n    }\r\n\r\n    onChangeTaskStatus = e => {\r\n        this.setState({taskStatus: e})\r\n        this.props.updateTaskStatus(this.state.task_id, e);\r\n    }\r\n\r\n    render() {\r\n\r\n        let task_name = this.state.task_name;\r\n        let task_status = this.state.taskStatus;\r\n        console.log(\"Status: \", task_status);\r\n        let task_name_text = (this.state.task_name).slice(0,50)\r\n        if(task_name_text.length>50) {\r\n            task_name_text = (this.state.task_name).slice(0,47) + \"...\"\r\n        }\r\n        let is_edit_task = this.state.is_edit_text;\r\n\r\n        let menu =  (<Menu>\r\n            <Menu.Item>\r\n                <Input placeholder=\"Basic usage\" />\r\n            </Menu.Item>\r\n        </Menu>);\r\n\r\n        return(\r\n            <div className={'sp-task'}>\r\n                <Row className={'sp-task-container'}>\r\n                    <Col sm={2} md={2} lg={2} xl={2} className={'sp-task-ref'}>\r\n                        <div>\r\n                            TX-1\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={12} md={12} lg={12} xl={12} className={'sp-task-text'}>\r\n                        {\r\n                            (is_edit_task || task_name==\"\") ?<Input placeholder=\"Basic usage\" value={ task_name } onKeyUp={this.onChangeText} onChange={this.onChangeTaskName} onFocus={()=>this.onEditFocus(true)} onBlur={()=>this.onEditFocus(false)} />:\r\n                                <div className={'task-text'}>\r\n                                    <span>{ task_name_text }</span>\r\n                                    <Button type=\"link\" onClick={()=>this.onClickEdit(true)}><EditOutlined /></Button>\r\n                                </div>\r\n                        }\r\n                    </Col>\r\n                    <Col sm={4} md={4} lg={4} xl={4} className={'text-right'}>\r\n\r\n                        {\r\n                            this.state.addMember?\r\n                            <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Tags Mode\">\r\n                            </Select>\r\n                            :\r\n                                <a className={'sp-task-user'} onClick={this.openAddMember}>\r\n                                    <UserAddOutlined />\r\n                                </a>\r\n                        }\r\n\r\n                    </Col>\r\n                    <Col sm={5} md={5} lg={5} xl={5} className={'sp-task-status text-right'}>\r\n                            <Select value={task_status} style={{ width: 150 }}\r\n                                onChange={this.onChangeTaskStatus}\r\n                                    className={'text-left'}\r\n                            >\r\n                                <Option value=\"TODO\">TO DO</Option>\r\n                                <Option value=\"PROCESSING\">IN PROGRESS</Option>\r\n                                <Option value=\"COMPLETED\">DONE</Option>\r\n                            </Select>\r\n                    </Col>\r\n                    <Col sm={1} md={1} lg={1} xl={1} className={'text-right'}>\r\n\r\n                        <Dropdown overlay={menu}>\r\n                            <a className={'sp-task-menu'}>\r\n                                <MoreOutlined />\r\n                            </a>\r\n                        </Dropdown>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task\r\n","import React from \"react\";\r\nimport Task from \"./TaskComponent\";\r\nimport {Button, Progress} from \"antd\";\r\nimport './task-set.scss'\r\n\r\nclass TaskSetComponent extends React.Component{\r\n\r\n    createTask = (lbl, title) => {\r\n        this.props.createTask(lbl, title)\r\n    }\r\n\r\n    updateTask = (taskId, lbl, title) => {\r\n        this.props.updateTask(taskId, lbl, title)\r\n    }\r\n\r\n    memberModal = (taskId) => {\r\n        this.props.handleMembers(taskId);\r\n    }\r\n\r\n    updateTaskStatus = (taskId, status) => {\r\n        this.props.updateTaskStatus(taskId, status);\r\n    }\r\n\r\n    render() {\r\n\r\n        let { tasks } = this.props;\r\n\r\n        // task progress calculation\r\n        let tasksCount = tasks.length;\r\n        let doneTasksCount = 0;\r\n        tasks.map((result, index)=>{\r\n            if(result.statusType==\"COMPLETED\") {\r\n                doneTasksCount = doneTasksCount + 1;\r\n            }\r\n        });\r\n        let donePercentage = ((doneTasksCount/tasksCount)*100);\r\n\r\n        console.log(\"Prasentage: \", donePercentage);\r\n\r\n        console.log(\"TASK-LIST: \", tasks);\r\n\r\n        return(\r\n            <div className={'sp-task-set'}>\r\n                <div className={'sp-task-set-progress'}>\r\n                    <div className={'title'}>\r\n                        Progress\r\n                    </div>\r\n                    <Progress\r\n                        strokeColor={{\r\n                            '0%': '#AB47BC',\r\n                            '100%': '#304FFE',\r\n                        }}\r\n                        percent={ donePercentage }\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className={'sp-task-set-tasks'}>\r\n                    <Button\r\n                        onClick={()=>{this.createTask(null, null)}}\r\n                    >New Task</Button>\r\n                    <div className={'title'}>\r\n                        Tasks\r\n                    </div>\r\n                    {\r\n                        tasks.map((r, i)=>\r\n                            <Task task={r} createTask={this.createTask} updateTask={this.updateTask} memberModal={this.memberModal} updateTaskStatus={this.updateTaskStatus} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskSetComponent\r\n","import React from 'react'\r\nimport {Button, Modal, Table, Tabs} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { PlusOutlined, CloseOutlined } from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '80%'\r\n    },\r\n    {\r\n        title: 'Action',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: '20%'\r\n    },\r\n];\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: 'Mike',\r\n        action: <Button>Assign</Button>\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'John',\r\n        action: <Button>Assign</Button>\r\n    },\r\n];\r\n\r\nclass MemberManagementModal extends React.Component {\r\n\r\n    state = {\r\n        taskAssigns_list: [],\r\n        projectMembers_list: [],\r\n        corporateEmployees_list: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTaskMembers(this.props.taskId);\r\n    }\r\n\r\n    getTaskMembers = (id) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`http://localhost:8080/v1/project-member/task/${id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    console.log(\"=================================\");\r\n                    console.log(response.data.body);\r\n                    this.prepareMembers(response.data.body);\r\n                    let data = response.data.body;\r\n                    this.prepareMembers(data);\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    prepareMembers = (data) => {\r\n        let taskAssigns = data.taskAssigns;\r\n        let projectMembers = data.projectMembers;\r\n        let corporateEmployees = data.corporateEmployees;\r\n        let x = [];\r\n        taskAssigns.map((r, i)=>{\r\n            let obj = {key: r.id, name: r.user.firstName, action: <Button type=\"danger\" shape=\"round\" icon={<CloseOutlined />} size={'small'} onClick={()=>this.handleTaskMember(\"REMOVE\", r.id)} />}\r\n            x.push(obj);\r\n        })\r\n        let y = [];\r\n        projectMembers.map((r, i)=>{\r\n            let obj = {key: r.id, name: r.user.firstName, action: <Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} size={'small'} onClick={()=>this.handleTaskMember(\"ADD\", r.id)} />}\r\n            y.push(obj);\r\n        })\r\n        let z = [];\r\n        corporateEmployees.map((r, i)=>{\r\n            let obj = {key: r.id, name: r.user.firstName, action: <Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} size={'small'} onClick={()=>this.handleTaskMember(\"ADD\", r.id)} />}\r\n            z.push(obj);\r\n        })\r\n        this.setState({\r\n            taskAssigns_list: x,\r\n            projectMembers_list: y,\r\n            corporateEmployees_list: z\r\n        })\r\n    };\r\n\r\n    handleTaskMember = (type, id) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let body = {\r\n            taskId: this.props.taskId,\r\n            corporateEmployeeId: id\r\n        };\r\n\r\n        let url = null;\r\n\r\n        let method = \"patch\";\r\n        switch (type) {\r\n            case 'ADD':\r\n                url = `http://localhost:8080/v1/task`;\r\n                break;\r\n            case 'REMOVE':\r\n                url = `http://localhost:8080/v1/task/remove`;\r\n                break;\r\n        }\r\n        axios[method](url, body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.getTaskMembers(this.props.taskId);\r\n                }\r\n                this.setState({loading: false});\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.handleMembers(0);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal\r\n                title={`Members`}\r\n                centered\r\n                // visible={this.state.visible}\r\n                visible={this.props.member_modal_visibility}\r\n                onCancel={this.closeModal}\r\n                width={520}\r\n                footer={null}\r\n            >\r\n                <Tabs defaultActiveKey=\"1\"\r\n                      // onChange={callback}\r\n                >\r\n                    <TabPane tab=\"Task Assigns\" key=\"1\">\r\n\r\n                        <Table\r\n                            pagination={false}\r\n                            dataSource={this.state.taskAssigns_list}\r\n                            columns={columns}\r\n                            header={false}\r\n                            className={'project-set-tbl'}\r\n                        />\r\n\r\n\r\n                    </TabPane>\r\n                    <TabPane tab=\"Project Members\" key=\"2\">\r\n                        <Table\r\n                            pagination={false}\r\n                            dataSource={this.state.projectMembers_list}\r\n                            columns={columns}\r\n                            header={false}\r\n                            className={'project-set-tbl'}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Other employees\" key=\"3\">\r\n                        <Table\r\n                            pagination={false}\r\n                            dataSource={this.state.corporateEmployees_list}\r\n                            columns={columns}\r\n                            header={false}\r\n                            className={'project-set-tbl'}\r\n                        />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MemberManagementModal;\r\n","import React from \"react\";\r\nimport {Button, Col, Empty, Form, Input, InputNumber, Modal, Row, Select, Tabs, Tag} from \"antd\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport TaskSetComponent from \"../../sp-componenets/user-story-component/TaskSetComponent\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport MemberManagementModal from \"./MemberManagementModal\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\nconst config = {\r\n    readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n}\r\n\r\nconst options = [{ value: 'gold' }, { value: 'lime' }, { value: 'green' }, { value: 'cyan' }];\r\n\r\n\r\nfunction tagRender(props) {\r\n    const { label, value, closable, onClose } = props;\r\n    const onPreventMouseDown = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n    return (\r\n        <Tag\r\n            color={value}\r\n            onMouseDown={onPreventMouseDown}\r\n            closable={closable}\r\n            onClose={onClose}\r\n            style={{ marginRight: 3, color: '#01579B', backgroundColor: '#E8EAF6'}}\r\n        >\r\n            {label}\r\n        </Tag>\r\n    );\r\n}\r\n\r\n\r\nclass UserStoryModal extends React.Component {\r\n\r\n    state = {\r\n        user_story_id: 0,\r\n        user_story: \"\",\r\n        content: \"\",\r\n        storyPoints: 0,\r\n        label: [],\r\n        priority: \"MEDIUM\",\r\n        project_name: \"\",\r\n        isEdit: false,\r\n        user_story_label: [],\r\n        tasks: [],\r\n        memberModal: false,\r\n        taskId: 0,\r\n\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadProjectUserStoryLbl();\r\n        this.prepareData(this.props.data, this.props.isEdit)\r\n    }\r\n\r\n    loadProjectUserStoryLbl = () => {\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`http://localhost:8080/v1/user-story/get-project-lbl?id=${this.props.project.id}`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    let label_list = response.data.body;\r\n                    let lbl = [];\r\n                    label_list.map(val=>{\r\n                        lbl.push({value:val.lbl});\r\n                    });\r\n                    this.setState({label: lbl});\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n    prepareResponseData = (data, isEdit) => {\r\n        this.loadProjectUserStoryLbl();\r\n        this.prepareData(data, isEdit)\r\n    }\r\n\r\n    prepareData = (data, isEdit) => {\r\n        if(isEdit) {\r\n\r\n            let label_list = [];\r\n            data.userStoryLbl.map(r=>{\r\n                label_list.push(r.lbl)\r\n            })\r\n\r\n            console.log(\"prosp: Lbl-list: \", data);\r\n            console.log(\"Lbl-list: \", label_list);\r\n\r\n            this.setState({\r\n                user_story_id: data.id,\r\n                user_story: data.title,\r\n                content: data.description,\r\n                user_story_label: label_list,\r\n                priority: data.priority,\r\n                project_name: this.props.project.projectName,\r\n                isEdit: isEdit,\r\n                tasks: data.tasks,\r\n                storyPoints: data.points\r\n            });\r\n        } else {\r\n            this.setState({\r\n                project_name: this.props.project.projectName,\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeDescription = val => {\r\n        this.setState({content: val})\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.modal_controller(false);\r\n    }\r\n\r\n    onChangeUserStoryTitle = e => {\r\n        this.setState({user_story: e.target.value});\r\n    }\r\n\r\n    onChangeUserStoryPoints = e => {\r\n        this.setState({storyPoints: e.target.value});\r\n    }\r\n\r\n    onChangeLabel = val => {\r\n        this.setState({\r\n            user_story_label: val\r\n        })\r\n    }\r\n\r\n    onChangeUserStory = (val) => {\r\n        if(val==\"CREATE\") {\r\n            if(Cookies.get('68e78905f4c')==\"\" ||\r\n                Cookies.get('68e78905f4c')==null ||\r\n                Cookies.get('68e78905f4c')==undefined) {\r\n                this.props.history.push(\"/auth/login\");\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            let request_body = {\r\n                projectId: this.props.project_id,\r\n                userStoryId: this.state.user_story_id,\r\n                title: this.state.user_story,\r\n                description: this.state.content,\r\n                userStoryLabels: this.state.user_story_label,\r\n                priority: this.state.priority,\r\n                points: this.state.storyPoints\r\n            }\r\n\r\n            let method = \"post\";\r\n\r\n            axios[method](`http://localhost:8080/v1/user-story?id=${this.props.current_sprint?this.props.current_sprint.id:0}`, request_body, {headers: headers})\r\n                .then(async response => {\r\n\r\n                    if(response.data.success) {\r\n                        this.prepareResponseData(response.data.body, true);\r\n\r\n                        Swal.fire(\r\n                            'Success',\r\n                            'User story created successfully!',\r\n                            'success'\r\n                        )\r\n                    }\r\n\r\n                }).catch(async error => {\r\n                this.setState({loading: false});\r\n\r\n                this.setState({showMessage:1});\r\n                setTimeout(() => {\r\n                    this.setState({showMessage:0});\r\n                }, 2000);\r\n\r\n            });\r\n        } else {\r\n            if(Cookies.get('68e78905f4c')==\"\" ||\r\n                Cookies.get('68e78905f4c')==null ||\r\n                Cookies.get('68e78905f4c')==undefined) {\r\n                this.props.history.push(\"/auth/login\");\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            let request_body = {\r\n                projectId: this.props.project_id,\r\n                userStoryId: this.state.user_story_id,\r\n                title: this.state.user_story,\r\n                description: this.state.content,\r\n                userStoryLabels: this.state.user_story_label,\r\n                priority: this.state.priority,\r\n                points: this.state.storyPoints\r\n            }\r\n\r\n            let method = \"post\";\r\n\r\n            axios[method](`http://localhost:8080/v1/user-story?id=${this.props.current_sprint?this.props.current_sprint.id:0}`, request_body, {headers: headers})\r\n                .then(async response => {\r\n\r\n                    if(response.data.success) {\r\n                        this.prepareResponseData(response.data.body, true);\r\n\r\n                        Swal.fire(\r\n                            'Success',\r\n                            'User story updated successfully!',\r\n                            'success'\r\n                        )\r\n\r\n                    }\r\n\r\n                }).catch(async error => {\r\n                this.setState({loading: false});\r\n\r\n                this.setState({showMessage:1});\r\n                setTimeout(() => {\r\n                    this.setState({showMessage:0});\r\n                }, 2000);\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Task Management -------------------------------------------------------------------------------------------------\r\n\r\n    createTask = (taskLbl, title) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let request_body = {\r\n            userStoryId: this.state.user_story_id,\r\n            title: title,\r\n            statusType: \"TODO\"\r\n        }\r\n\r\n        let method = \"post\";\r\n\r\n        axios[method](`http://localhost:8080/v1/task`, request_body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    let tasks = this.state.tasks;\r\n                    tasks.push(response.data.body);\r\n                    this.setState({tasks: tasks});\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n    updateTask = (taskId, taskLbl, title) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let request_body = {\r\n            taskId: taskId,\r\n            userStoryId: this.state.user_story_id,\r\n            title: title,\r\n            statusType: \"TODO\"\r\n        }\r\n\r\n        let method = \"post\";\r\n\r\n        axios[method](`http://localhost:8080/v1/task`, request_body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    let tasks = this.state.tasks;\r\n                    this.setState({tasks: tasks});\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n    handleMembers = (taskId) => {\r\n        if(taskId!=0) {\r\n            this.setState({\r\n                memberModal: true,\r\n                taskId: taskId\r\n            })\r\n        } else {\r\n            this.setState({\r\n                memberModal: false,\r\n                taskId: taskId\r\n            })\r\n        }\r\n    }\r\n\r\n    updateTaskStatus = (taskId, status) => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let request_body = {}\r\n\r\n        let method = \"patch\";\r\n\r\n        axios[method](`http://localhost:8080/v1/task/status?id=${taskId}&status=${status}`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({tasks: response.data.body});\r\n                    this.setState({loading: false});\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let {user_story_id, user_story, content, label, priority, user_story_label, storyPoints} = this.state;\r\n\r\n        return(\r\n            <div>\r\n\r\n            <Modal\r\n                title={(this.state.isEdit && this.state.user_story!=\"\")?`${this.state.project_name} -> ${(this.state.user_story.length>100)?`${this.state.user_story.slice(0, 97)}...`\r\n                    :this.state.user_story}`:`${this.state.project_name} -> New User story`}\r\n                centered\r\n                // visible={this.state.visible}\r\n                visible={this.props.user_story_modal_visibility}\r\n                onCancel={this.closeModal}\r\n                width={1000}\r\n                footer={null}\r\n            >\r\n\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane\r\n                        tab={\r\n                            <span>\r\n                             Attributes\r\n                            </span>\r\n                        }\r\n                        key=\"1\"\r\n                    >\r\n\r\n                        <div>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={4} xl={4}>\r\n                                    User Story\r\n                                </Col>\r\n                                <Col sm={24} md={24} lg={20} xl={20}>\r\n                                    <Input.TextArea value={user_story} onChange={this.onChangeUserStoryTitle} />\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={4} xl={4}>\r\n                                    Description\r\n                                </Col>\r\n                                <Col sm={24} md={24} lg={20} xl={20} className={'custom-text-editor'}>\r\n\r\n                                    <JoditEditor\r\n                                        ref={null}\r\n                                        value={content}\r\n                                        config={config}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => this.onChangeDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={newContent => {}}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={4} xl={4}>\r\n                                    Story points\r\n                                </Col>\r\n                                <Col sm={24} md={24} lg={20} xl={20}>\r\n                                    <Input value={storyPoints} onChange={this.onChangeUserStoryPoints} />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={4} xl={4}>\r\n                                    Label\r\n                                </Col>\r\n                                <Col sm={24} md={24} lg={20} xl={20}>\r\n                                    <Select\r\n                                        mode=\"tags\"\r\n                                        showArrow\r\n                                        tagRender={tagRender}\r\n                                        value={user_story_label}\r\n                                        // defaultValue={['XXXX', 'YYYY']}\r\n                                        style={{ width: '100%' }}\r\n                                        options={label}\r\n                                        onChange={this.onChangeLabel}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={4} xl={4}>\r\n                                    Priority\r\n                                </Col>\r\n                                <Col sm={24} md={24} lg={20} xl={20}>\r\n                                    <Select defaultValue=\"MEDIUM\" style={{ width: '100%' }}\r\n                                        // onChange={handleChange}\r\n                                    >\r\n                                        <Option value=\"HIGH\">High</Option>\r\n                                        <Option value=\"MEDIUM\">Medium</Option>\r\n                                        <Option value=\"LOW\">Low</Option>\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row>\r\n                                <Col sm={24} md={24} lg={24} xl={24} className={'text-right'}>\r\n                                    {\r\n                                        <Button type=\"primary\"\r\n                                            onClick={\r\n                                                user_story_id!=0?\r\n                                                    ()=>this.onChangeUserStory(\"UPDATE\") :\r\n                                                    ()=>this.onChangeUserStory(\"CREATE\")}\r\n                                        >\r\n                                            {\r\n                                                user_story_id==0?\"Create\":\"Update\"\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    </TabPane>\r\n\r\n\r\n                    <TabPane\r\n                        tab={\r\n                            <span>\r\n                             Tasks\r\n                            </span>\r\n                        }\r\n                        key=\"2\"\r\n                        disabled={this.state.user_story_id<=0}\r\n                    >\r\n                        {\r\n                            this.state.tasks.length==0?\r\n                                <Empty\r\n                                    image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\r\n                                    imageStyle={{\r\n                                        height: 60,\r\n                                    }}\r\n                                    description={\r\n                                        <span>\r\n                                    No <a href=\"#API\">tasks</a> yet.\r\n                                </span>\r\n                                    }\r\n                                >\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        onClick={()=>this.createTask(null, null)}\r\n                                    >Create New</Button>\r\n                                </Empty>\r\n                                :\r\n                                <TaskSetComponent tasks={this.state.tasks} createTask={this.createTask} updateTask={this.updateTask} handleMembers={this.handleMembers} updateTaskStatus={this.updateTaskStatus} />\r\n                        }\r\n\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n            </Modal>\r\n                {\r\n                    (this.state.memberModal & this.state.taskId!=0)?<MemberManagementModal member_modal_visibility={true} taskId={this.state.taskId} handleMembers={this.handleMembers} />:null\r\n                }\r\n\r\n\r\n\r\n                {\r\n                    this.state.loading?\r\n                        <div className=\"loading-overlay-2\">\r\n                            <div className=\"bounce-loader\">\r\n                                <img src={'/img/preloader.gif'} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        :null\r\n                }\r\n\r\n\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default UserStoryModal;\r\n","import React from \"react\";\r\nimport {Button, Form, Input, Modal, Select} from \"antd\";\r\nimport { DatePicker, message } from 'antd';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\nimport moment from \"moment\";\r\nconst { RangePicker } = DatePicker;\r\nconst key = 'updatable';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction formatDate(date) {\r\n    var d = date,\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nclass SprintEditModal extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        goal: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        duration: '1w'\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.sprint) {\r\n            this.setState({\r\n                name: this.props.sprint.sprintName,\r\n                goal: this.props.sprint.description,\r\n                startDate: this.props.sprint.startDate,\r\n                endDate: this.props.sprint.endDate,\r\n            })\r\n        }\r\n    }\r\n\r\n    onClose = () => {\r\n        this.cleanInputs();\r\n        this.props.onClose(null, false);\r\n    }\r\n\r\n    onChangeName = e => {\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    onChangeGoal = e => {\r\n        this.setState({goal: e.target.value})\r\n    }\r\n\r\n    onChangeDateRange = (date, dateString) => {\r\n        if (dateString[0] !== \"\" || dateString[1] !== \"\") {\r\n            let start = new Date(dateString[0]);\r\n            let end = new Date(dateString[1]);\r\n            start = (start.toISOString()).split(\"T\")[0];\r\n            end = (end.toISOString()).split(\"T\")[0];\r\n            this.setState({\r\n                startDate: start,\r\n                endDate: end\r\n            });\r\n        }\r\n    };\r\n\r\n    onChangeDate = (data, dateString) => {\r\n        console.log(\"DateString: \", dateString);\r\n        this.setState({startDate: dateString});\r\n    }\r\n\r\n    onChangeSprintTime = e => {\r\n        console.log(\"time: \", e);\r\n        if(this.state.startDate!=null & this.state.startDate!=undefined & this.state.startDate!=\"\") {\r\n            let split = (this.state.startDate).split(\" \");\r\n            let parts=split[0].split(\"-\");\r\n            let mydate = new Date(parts[0], parts[1] - 1, parts[2]);\r\n            switch (e) {\r\n                case \"1w\":\r\n                    mydate.setDate(mydate.getDate() + 7);\r\n                    break;\r\n                case \"2w\":\r\n                    mydate.setDate(mydate.getDate() + 14);\r\n                    break;\r\n                case \"3w\":\r\n                    mydate.setDate(mydate.getDate() + 21);\r\n                    break;\r\n                case \"4w\":\r\n                    mydate.setDate(mydate.getDate() + 28);\r\n                    break;\r\n            }\r\n            let date = formatDate(mydate);\r\n            this.setState({duration: e, endDate: date})\r\n        } else {\r\n            this.setState({duration: e})\r\n        }\r\n    }\r\n\r\n    cleanInputs = () => {\r\n        this.setState({\r\n            name: '',\r\n            goal: '',\r\n            startDate: '',\r\n            endDate: '',\r\n        })\r\n    }\r\n\r\n// Create --------------------------------------------------------------------------------------------------------------\r\n    createSprint = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let body = {\r\n            projectId: this.props.projectId,\r\n            sprintName: this.state.name,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            description: this.state.goal,\r\n        }\r\n\r\n        let method = \"post\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/add`, body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status==200) {\r\n                    if(response.data.success) {\r\n                        message.success('Sprint created successfully!');\r\n                        this.cleanInputs();\r\n                        this.onClose();\r\n                    }\r\n                }\r\n            }).catch(async error => {\r\n            message.error('Something went wrong!');\r\n        });\r\n    }\r\n\r\n// Update --------------------------------------------------------------------------------------------------------------\r\n    updateSprint = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let body = {\r\n            id: this.props.sprint?this.props.sprint.id:0,\r\n            projectId: this.props.projectId,\r\n            sprintName: this.state.name,\r\n            startDate: this.state.startDate,\r\n            endDate: this.state.endDate,\r\n            description: this.state.goal,\r\n        }\r\n\r\n        let method = \"patch\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/update`, body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status==200) {\r\n                    if(response.data.success) {\r\n                        message.success('Sprint updated successfully!');\r\n                        this.cleanInputs();\r\n                        this.onClose();\r\n                    }\r\n                }\r\n            }).catch(async error => {\r\n            message.error('Something went wrong!');\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        // Modal function type\r\n        let type = this.props.type;\r\n\r\n        // Date Range\r\n        let startDate = null;\r\n        if (this.state.startDate !== null && this.state.startDate !== undefined && this.state.startDate !== \"\") {\r\n            let startdate = this.state.startDate;\r\n            startDate = moment(startdate);\r\n        } else {\r\n            startDate = null;\r\n        }\r\n\r\n        return(\r\n            <Modal\r\n                title=\"Basic Modal\"\r\n                visible={this.props.isEditVisible}\r\n                onCancel={this.onClose}\r\n                footer={false}\r\n                className={'sprint-edit-modal'}\r\n            >\r\n\r\n\r\n                <Form\r\n                    layout=\"vertical\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"Sprint Name\"\r\n                        required\r\n                        // tooltip=\"This is a required field\"\r\n                    >\r\n                        <Input placeholder=\"input placeholder\" value={this.state.name} onChange={this.onChangeName} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sprint Goal\"\r\n                        // tooltip={{ title: 'Tooltip with customize icon', icon: <InfoCircleOutlined /> }}\r\n                    >\r\n                        <Input.TextArea placeholder=\"input placeholder\" value={this.state.goal} onChange={this.onChangeGoal} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sprint Start\"\r\n                        // tooltip=\"This is a required field\"\r\n                    >\r\n                        {/*<RangePicker value={dateRange} onChange={this.onChangeDateRange} />*/}\r\n                        <DatePicker value={startDate} onChange={this.onChangeDate} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sprint Duration\"\r\n                    >\r\n                        <Select value={this.state.duration} style={{ width: 120 }} onChange={this.onChangeSprintTime}>\r\n                            <Option value=\"1w\">1 Week</Option>\r\n                            <Option value=\"2w\">2 Weeks</Option>\r\n                            <Option value=\"3w\">3 Weeks</Option>\r\n                            <Option value=\"4w\">4 Weeks</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sprint EndDate\"\r\n                    >\r\n                        {this.state.endDate}\r\n                    </Form.Item>\r\n                    <Form.Item className={'text-right'}>\r\n                        {\r\n                            type=='CREATE'?\r\n                                <Button type=\"primary\" onClick={this.createSprint}>Submit</Button>\r\n                                :\r\n                                <Button type=\"primary\" onClick={this.updateSprint}>Update</Button>\r\n                        }\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SprintEditModal;\r\n","import React from \"react\";\r\nimport {Button, Col, Dropdown, Menu, Row, Select, Table, Tag, Tooltip} from \"antd\";\r\nimport './sprint-container.scss'\r\nimport { MinusCircleOutlined, WarningOutlined, NodeIndexOutlined, ArrowRightOutlined, DeleteOutlined, EyeOutlined, UnorderedListOutlined, EditOutlined, EllipsisOutlined, CheckCircleOutlined, SyncOutlined, ClockCircleOutlined, MenuOutlined, SelectOutlined, AlertOutlined, PlusOutlined, CaretRightOutlined } from '@ant-design/icons';\r\nimport {SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\r\nimport {arrayMoveImmutable} from \"array-move\";\r\nimport SprintEditModal from \"./sprint-edit-modal\";\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item style={{color:'#1976D2'}}><EyeOutlined /> View</Menu.Item>\r\n        <Menu.ItemGroup title=\"Move to sprint\">\r\n            <Menu.Item><ArrowRightOutlined /> Move to Sprint 1</Menu.Item>\r\n            <Menu.Item><ArrowRightOutlined /> Move to Sprint 2</Menu.Item>\r\n            <Menu.Item><ArrowRightOutlined /> Move to Sprint 3</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.Item style={{color:'#AD1457'}}><DeleteOutlined /> Remove</Menu.Item>\r\n    </Menu>\r\n);\r\nconst DragHandle = SortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\nconst columns = [\r\n    {\r\n        title: 'Sort',\r\n        dataIndex: 'sort',\r\n        width: '2.5%',\r\n        className: 'drag-visible',\r\n        render: () => <DragHandle />,\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        dataIndex: 'edit',\r\n        className: 'drag-visible',\r\n        width: '2.5%',\r\n    },\r\n    {\r\n        title: 'User Story',\r\n        dataIndex: 'user_story',\r\n        width: '70%',\r\n    },\r\n    {\r\n        title: 'Priority',\r\n        dataIndex: 'priority',\r\n        width: '5%',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        width: '5%',\r\n    },\r\n    {\r\n        title: 'Sprint',\r\n        dataIndex: 'sprint',\r\n        width: '10%',\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        width: '5%',\r\n    }\r\n];\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableBody = SortableContainer(props => <tbody {...props} />);\r\n\r\nclass BacklogContainer extends React.Component {\r\n\r\n    state = {\r\n        dataSource: [\r\n            {\r\n                key: 1,\r\n                edit: <Button type={'link'}\r\n                    // onClick={()=>this.props.openEdit(r, i)}\r\n                >\r\n                    <SelectOutlined />\r\n                </Button>,\r\n                user_story: 'test',\r\n                priority:\r\n                    <Tooltip placement=\"top\" title={'Priority High'}>\r\n                        <span style={{color: 'red'}}>\r\n                            <AlertOutlined />\r\n                        </span>\r\n                    </Tooltip>\r\n                ,\r\n                status:\r\n                    <Select defaultValue=\"lucy\" style={{ width: 120 }}\r\n                        // onChange={handleChange}\r\n                    >\r\n                        <Option value=\"jack\">Jack</Option>\r\n                        <Option value=\"lucy\">Lucy</Option>\r\n                        <Option value=\"disabled\" disabled>\r\n                            Disabled\r\n                        </Option>\r\n                        <Option value=\"Yiminghe\">yiminghe</Option>\r\n                    </Select>\r\n                ,\r\n                actions:\r\n                    <Dropdown overlay={menu}>\r\n                        <Button type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            <EllipsisOutlined />\r\n                        </Button>\r\n                    </Dropdown>,\r\n                index: 0\r\n            },\r\n            {\r\n                key: 2,\r\n                edit: <Button type={'link'}\r\n                    // onClick={()=>this.props.openEdit(r, i)}\r\n                >\r\n                    <SelectOutlined />\r\n                </Button>,\r\n                user_story: 'test',\r\n                status: 'Active',\r\n                priority: \"High\",\r\n                index: 1\r\n            }\r\n        ],\r\n        toggle: true\r\n    }\r\n\r\n// Table ---------------------------------------------------------------------------------------------------------------\r\n    DraggableContainer = props => (\r\n        <SortableBody\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(\r\n                el => !!el,\r\n            );\r\n            console.log(newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableBody\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const { dataSource } = this.state;\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n// Change toggle -------------------------------------------------------------------------------------------------------\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        });\r\n    };\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        let userStories = this.props.user_stories;\r\n        let dataSource = [];\r\n        if(userStories!=null & userStories!='' & userStories!=undefined) {\r\n            userStories.map((r, i)=>{\r\n\r\n                let isOtherSprints = (r.otherSprints!=null & r.otherSprints!='' & r.otherSprints!=undefined)?r.otherSprints.length>0?true:false:false;\r\n\r\n                let menu = (\r\n                    <Menu>\r\n                        <Menu.Item style={{color:'#1976D2'}} onClick={()=>this.props.openEdit(r, i)}><EyeOutlined /> View</Menu.Item>\r\n                        <Menu.ItemGroup title=\"Move to sprint\">\r\n                            {\r\n                                isOtherSprints?r.otherSprints.map((rx, index)=><Menu.Item key={index} onClick={()=>this.props.move_user_story(r.id, rx.id)}><ArrowRightOutlined />Move to {rx.sprintName}</Menu.Item>):<Tag icon={<MinusCircleOutlined />} color=\"default\">\r\n                                    No Sprints\r\n                                </Tag>\r\n                            }\r\n                        </Menu.ItemGroup>\r\n                        <Menu.Item style={{color:'#AD1457'}}><DeleteOutlined /> Remove</Menu.Item>\r\n                    </Menu>\r\n                );\r\n\r\n\r\n                let obj = {\r\n                    key: i,\r\n                    edit: <Button type={'link'}\r\n                        onClick={()=>this.props.openEdit(r, i)}\r\n                    >\r\n                        <SelectOutlined />\r\n                    </Button>,\r\n                    user_story: r.title,\r\n                    priority:\r\n                    (r.priority=='HIGH')?\r\n                            <Tooltip placement=\"top\" title={'Priority High 🤯'}>\r\n                                <span style={{color: 'red'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                            </Tooltip>\r\n                            :(r.priority=='MEDIUM')?\r\n                        <Tooltip placement=\"top\" title={'Priority Medium 🙂'}>\r\n                                <span style={{color: 'green'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                        </Tooltip>\r\n                        :<Tooltip placement=\"top\" title={'Priority low ☺️'}>\r\n                                <span style={{color: '#90CAF9'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                        </Tooltip>\r\n                    ,\r\n                    status:\r\n                        <Select defaultValue=\"TODO\" style={{ width: 120 }}\r\n                            // onChange={handleChange}\r\n                        >\r\n                            <Option value=\"TODO\" style={{backgroundColor: '#CFD8DC'}}>Todo</Option>\r\n                            <Option value=\"PROCESSING\" style={{backgroundColor: '#B3E5FC'}}>Processing</Option>\r\n                            <Option value=\"DONE\" style={{backgroundColor: '#C8E6C9'}}>Done</Option>\r\n                        </Select>\r\n                    ,\r\n                    sprint: <span>{r.sprint!=null?r.sprint.sprintName:<Tooltip placement=\"top\" title={'No assigned sprint yet ⚠️'}><WarningOutlined /></Tooltip>}\r\n                        <a type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                <NodeIndexOutlined />\r\n                            </a>\r\n                    </span>,\r\n                    actions:\r\n                        <Dropdown overlay={menu}>\r\n                            <Button type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                <EllipsisOutlined />\r\n                            </Button>\r\n                        </Dropdown>,\r\n                    index: 0\r\n                }\r\n                dataSource.push(obj);\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className={'sprint-container'}>\r\n                    {/*header*/}\r\n                    <div className={'sprint-container-header'}>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} className={'section1'}>\r\n                                {/*<span className={'drop-arrow'}><Button type={'text'} onClick={this.toggle}>{ this.state.toggle?<CaretDownOutlined />:<CaretRightOutlined />}</Button></span>*/}\r\n                                <span className={'title'}>{`${'Backlog'}`}</span>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} className={'section2'}>\r\n                                <span><Tag icon={<UnorderedListOutlined />} color=\"default\">{`${0}`}</Tag></span>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    {/*body*/}\r\n                    {\r\n                        this.state.toggle?\r\n                            <div className={'sprint-container-body'}>\r\n                                <Table\r\n                                    pagination={false}\r\n                                    dataSource={dataSource}\r\n                                    columns={columns}\r\n                                    rowKey=\"index\"\r\n                                    components={{\r\n                                        body: {\r\n                                            wrapper: this.DraggableContainer,\r\n                                            row: this.DraggableBodyRow,\r\n                                        },\r\n                                    }}\r\n                                    showHeader={false}\r\n                                />\r\n                            </div>\r\n                            :null\r\n                    }\r\n\r\n                    {/*footer*/}\r\n                    {\r\n                        this.state.toggle?\r\n                            <div className={'sprint-container-footer'}>\r\n                                <Button onClick={()=>this.props.onChangeUserStoryModal(true)}>\r\n                                    <PlusOutlined /> New User Story\r\n                                </Button>\r\n                            </div>\r\n                            :null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BacklogContainer;\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport BacklogTable from \"../../../../components/layout-components/BacklogTable/backlog-table\";\r\nimport UserStoryModal from \"../../../../components/layout-components/UserStoryModal/UserStoryModal\";\r\nimport {connect} from \"react-redux\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport {message, Button, notification} from \"antd\";\r\nimport { MenuOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport * as BaseUrl from '../../../../server/base_urls'\r\nimport BacklogContainer from \"../../../../components/sp-componenets/sprint-components/backlog-container\";\r\n\r\nclass ProjectBacklog extends React.Component {\r\n\r\n    state = {\r\n      user_story_modal: false,\r\n      user_stories: [],\r\n      sprints: [],\r\n      selected_user_story: null,\r\n      isEdit: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        // this.get_sprint_data();\r\n        this.load_backlog_data();\r\n    }\r\n\r\n    load_backlog_data = () => {\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story/get-project?id=${this.props.projectReducer.project.uuid}&corporate=${this.props.corporateReducer.corporate_id}`, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    this.setState({user_stories: []})\r\n                    this.setState({user_stories: response.data.body})\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n    openEdit = (data, index) => {\r\n        this.setState({\r\n            selected_user_story: data,\r\n            isEdit: true\r\n        })\r\n        this.onChangeUserStoryModal(true);\r\n    }\r\n\r\n    onChangeUserStoryModal = val => {\r\n      this.setState({user_story_modal: val});\r\n        if(!val) {\r\n            this.setState({isEdit: false});\r\n        }\r\n        this.load_backlog_data();\r\n\r\n    };\r\n// Move to Sprint ------------------------------------------------------------------------------------------------------\r\n    move_to_sprint = (userStoryId, sprintId) => {\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"patch\";\r\n\r\n        let body = {\r\n            userStoryId: userStoryId,\r\n            sprintId: sprintId\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story/move`, body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    message.success('User story moved to sprint successfully');\r\n                    this.load_backlog_data();\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        let project_id = this.props.projectReducer.id;\r\n        let project = this.props.projectReducer.project;\r\n        let data = this.state.user_stories;\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n                {this.props.projectReducer.id}\r\n                <div>\r\n                    <h3>Backlog</h3>\r\n                </div>\r\n                {\r\n                    this.state.user_story_modal?\r\n                        <UserStoryModal\r\n                            user_story_modal_visibility={this.state.user_story_modal}\r\n                            project_id={project_id}\r\n                            modal_controller={this.onChangeUserStoryModal}\r\n                            data={this.state.selected_user_story}\r\n                            project={project}\r\n                            isEdit={this.state.isEdit}\r\n                        />\r\n                        :\"\"\r\n                }\r\n                {/*<div>*/}\r\n\r\n                {/*    {*/}\r\n                {/*        (data!=null & data!='' & data!=undefined)?*/}\r\n                {/*            data.length>6?<div>*/}\r\n                {/*                <Button block style={{backgroundColor: 'rgba(0, 0, 0, 0)', borderRadius: '0px', marginBottom: '10px'}}*/}\r\n                {/*                        onClick={()=>this.onChangeUserStoryModal(true)}*/}\r\n                {/*                >*/}\r\n                {/*                    <PlusCircleOutlined /> New User Story*/}\r\n                {/*                </Button>*/}\r\n                {/*            </div>*/}\r\n                {/*                :\"\"*/}\r\n                {/*            :\"\"*/}\r\n                {/*    }*/}\r\n\r\n                {/*    {*/}\r\n                {/*        (this.state.user_stories!=null & this.state.user_stories!='' & this.state.user_stories!=undefined)?*/}\r\n                {/*            this.state.user_stories?data.length!=0?<BacklogTable user_stories={this.state.user_stories} openEdit={this.openEdit} />*/}\r\n                {/*            :null:null:null*/}\r\n                {/*    }*/}\r\n                {/*    <div>*/}\r\n                {/*        <Button block style={{backgroundColor: 'rgba(0, 0, 0, 0)', borderRadius: '0px', marginTop: '10px'}}*/}\r\n                {/*                onClick={()=>this.onChangeUserStoryModal(true)}*/}\r\n                {/*        >*/}\r\n                {/*            <PlusCircleOutlined /> New User Story*/}\r\n                {/*        </Button>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n\r\n                <BacklogContainer user_stories={this.state.user_stories} move_user_story={this.move_to_sprint} openEdit={this.openEdit} onChangeUserStoryModal={this.onChangeUserStoryModal} />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectBacklog));\r\n","import React from \"react\";\r\nimport {Button, Col, Dropdown, Menu, Row, Select, Table, Tag, Tooltip} from \"antd\";\r\nimport './sprint-container.scss'\r\nimport { CaretDownOutlined, MinusCircleOutlined, WarningOutlined, NodeIndexOutlined, ArrowRightOutlined, DeleteOutlined, EyeOutlined, UnorderedListOutlined, EditOutlined, EllipsisOutlined, CheckCircleOutlined, SyncOutlined, ClockCircleOutlined, MenuOutlined, SelectOutlined, AlertOutlined, PlusOutlined, CaretRightOutlined } from '@ant-design/icons';\r\nimport {SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\r\nimport {arrayMoveImmutable} from \"array-move\";\r\nimport SprintEditModal from \"./sprint-edit-modal\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.ItemGroup title=\"Group title\">\r\n            <Menu.Item>1st menu item</Menu.Item>\r\n            <Menu.Item>2nd menu item</Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <SubMenu title=\"sub menu\">\r\n            <Menu.Item>3rd menu item</Menu.Item>\r\n            <Menu.Item>4th menu item</Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu title=\"disabled sub menu\" disabled>\r\n            <Menu.Item>5d menu item</Menu.Item>\r\n            <Menu.Item>6th menu item</Menu.Item>\r\n        </SubMenu>\r\n    </Menu>\r\n);\r\nconst DragHandle = SortableHandle(() => <MenuOutlined style={{ cursor: 'grab', color: '#999' }} />);\r\nconst columns = [\r\n    {\r\n        title: 'Sort',\r\n        dataIndex: 'sort',\r\n        width: '2.5%',\r\n        className: 'drag-visible',\r\n        render: () => <DragHandle />,\r\n    },\r\n    {\r\n        title: 'Edit',\r\n        dataIndex: 'edit',\r\n        className: 'drag-visible',\r\n        width: '2.5%',\r\n    },\r\n    {\r\n        title: 'User Story',\r\n        dataIndex: 'user_story',\r\n        width: '70%',\r\n    },\r\n    {\r\n        title: 'Priority',\r\n        dataIndex: 'priority',\r\n        width: '5%',\r\n    },\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        width: '5%',\r\n    },\r\n    {\r\n        title: 'Sprint',\r\n        dataIndex: 'sprint',\r\n        width: '10%',\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        width: '5%',\r\n    }\r\n];\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableBody = SortableContainer(props => <tbody {...props} />);\r\n\r\nclass SprintContainer extends React.Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        dataSource: [\r\n            {\r\n                key: 1,\r\n                edit: <Button type={'link'}\r\n                              // onClick={()=>this.props.openEdit(r, i)}\r\n                >\r\n                    <SelectOutlined />\r\n                </Button>,\r\n                user_story: 'test',\r\n                priority:\r\n                    <Tooltip placement=\"top\" title={'Priority High'}>\r\n                        <span style={{color: 'red'}}>\r\n                            <AlertOutlined />\r\n                        </span>\r\n                    </Tooltip>\r\n                ,\r\n                status:\r\n                    <Select defaultValue=\"lucy\" style={{ width: 120 }}\r\n                            // onChange={handleChange}\r\n                    >\r\n                        <Option value=\"jack\">Jack</Option>\r\n                        <Option value=\"lucy\">Lucy</Option>\r\n                        <Option value=\"disabled\" disabled>\r\n                            Disabled\r\n                        </Option>\r\n                        <Option value=\"Yiminghe\">yiminghe</Option>\r\n                    </Select>\r\n                ,\r\n                actions:\r\n                    <Dropdown overlay={menu}>\r\n                        <Button type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            <EllipsisOutlined />\r\n                        </Button>\r\n                    </Dropdown>,\r\n                index: 0\r\n            },\r\n            {\r\n                key: 2,\r\n                edit: <Button type={'link'}\r\n                    // onClick={()=>this.props.openEdit(r, i)}\r\n                >\r\n                    <SelectOutlined />\r\n                </Button>,\r\n                user_story: 'test',\r\n                status: 'Active',\r\n                priority: \"High\",\r\n                index: 1\r\n            }\r\n        ],\r\n        toggle: false\r\n    }\r\n\r\n// Table ---------------------------------------------------------------------------------------------------------------\r\n    DraggableContainer = props => (\r\n        <SortableBody\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const { dataSource } = this.state;\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMoveImmutable([].concat(dataSource), oldIndex, newIndex).filter(\r\n                el => !!el,\r\n            );\r\n            console.log(newData);\r\n            this.setState({ dataSource: newData });\r\n        }\r\n    };\r\n\r\n    DraggableContainer = props => (\r\n        <SortableBody\r\n            useDragHandle\r\n            disableAutoscroll\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={this.onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const { dataSource } = this.state;\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n// Change toggle -------------------------------------------------------------------------------------------------------\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        });\r\n    };\r\n\r\n// Start sprint --------------------------------------------------------------------------------------------------------\r\n    startSprint = () => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let request_body = {}\r\n        let method = \"patch\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/start?id=${this.props.sprint.id}`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.props.loadSprints();\r\n                    Swal.fire(\r\n                        'Success',\r\n                        'Sprint started successfully!',\r\n                        'success'\r\n                    )\r\n                }\r\n                this.setState({loading: false});\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    onChangeUserStoryStatus = (e, i) => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let request_body = {\r\n            userStoryId: i,\r\n            status: e\r\n        }\r\n        let method = \"patch\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.props.loadSprints();\r\n                    Swal.fire(\r\n                        'Success',\r\n                        'Sprint started successfully!',\r\n                        'success'\r\n                    )\r\n                }\r\n                this.setState({loading: false});\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let dataSource = [];\r\n        let todo = 0;\r\n        let process = 0;\r\n        let done = 0;\r\n        this.props.sprint.userStory.map((r, i)=>{\r\n            let isOtherSprints = (r.otherSprints!=null & r.otherSprints!='' & r.otherSprints!=undefined)?r.otherSprints.length>0?true:false:false;\r\n\r\n            let menu = (\r\n                <Menu>\r\n                    <Menu.Item style={{color:'#1976D2'}} onClick={()=>this.props.openEdit(r, i, this.props.sprint)}><EyeOutlined /> View</Menu.Item>\r\n                    <Menu.ItemGroup title=\"Move to sprint\">\r\n                        {\r\n                            isOtherSprints?r.otherSprints.map((rx, index)=><Menu.Item key={index} onClick={()=>this.props.move_user_story(r.id, rx.id)}><ArrowRightOutlined />Move to {rx.sprintName}</Menu.Item>):<Tag icon={<MinusCircleOutlined />} color=\"default\">\r\n                                No Sprints\r\n                            </Tag>\r\n                        }\r\n                    </Menu.ItemGroup>\r\n                    <Menu.Item style={{color:'#AD1457'}}><DeleteOutlined /> Remove</Menu.Item>\r\n                </Menu>\r\n            );\r\n\r\n            let obj = {\r\n                key: i,\r\n                edit: <Button type={'link'}\r\n                    onClick={()=>this.props.openEdit(r, i, this.props.sprint)}\r\n                >\r\n                    <SelectOutlined />\r\n                </Button>,\r\n                user_story: r.title,\r\n                priority:\r\n                    (r.priority=='HIGH')?\r\n                        <Tooltip placement=\"top\" title={'Priority High 🤯'}>\r\n                                <span style={{color: 'red'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                        </Tooltip>\r\n                        :(r.priority=='MEDIUM')?\r\n                        <Tooltip placement=\"top\" title={'Priority Medium 🙂'}>\r\n                                <span style={{color: 'green'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                        </Tooltip>\r\n                        :<Tooltip placement=\"top\" title={'Priority low ☺️'}>\r\n                                <span style={{color: '#90CAF9'}}>\r\n                                    <AlertOutlined />\r\n                                </span>\r\n                        </Tooltip>\r\n                ,\r\n                status:\r\n                    <Select defaultValue={r.statusType} style={{ width: 120 }}\r\n                        onChange={(value)=>this.onChangeUserStoryStatus(value, r.id)}\r\n                    >\r\n                        <Option value=\"TODO\" style={{backgroundColor: '#CFD8DC'}}>Todo</Option>\r\n                        <Option value=\"PROCESSING\" style={{backgroundColor: '#B3E5FC'}}>Processing</Option>\r\n                        <Option value=\"COMPLETED\" style={{backgroundColor: '#C8E6C9'}}>Done</Option>\r\n                    </Select>\r\n                ,\r\n                sprint: <span>{r.sprint!=null?r.sprint.sprintName:<Tooltip placement=\"top\" title={'No assigned sprint yet ⚠️'}><WarningOutlined /></Tooltip>}\r\n                    <a type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                <NodeIndexOutlined />\r\n                            </a>\r\n                    </span>,\r\n                actions:\r\n                    <Dropdown overlay={menu}>\r\n                        <Button type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            <EllipsisOutlined />\r\n                        </Button>\r\n                    </Dropdown>,\r\n                index: 0\r\n            }\r\n            dataSource.push(obj);\r\n            if(r.statusType=='TODO') {todo = todo + 1}\r\n            if(r.statusType=='PROCESSING') {process = process + 1}\r\n            if(r.statusType=='DONE') {done = done + 1}\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div className={'sprint-container'}>\r\n                    {/*header*/}\r\n                    <div className={'sprint-container-header'}>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} className={'section1'}>\r\n                                <span className={'drop-arrow'}><Button type={'text'} onClick={this.toggle}>{ this.state.toggle?<CaretDownOutlined />:<CaretRightOutlined />}</Button></span>\r\n                                <span className={'title'}>{`${this.props.sprint.sprintName}`}</span>\r\n                                <span className={'edit'}><Button type={'text'} onClick={()=>this.props.updateSprint(this.props.sprint)}><EditOutlined />Edit</Button></span>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12} className={'section2'}>\r\n                                <span><Tag icon={<ClockCircleOutlined />} color=\"default\">{`${todo}`}</Tag></span>\r\n                                <span><Tag icon={<SyncOutlined />} color=\"processing\">{`${process}`}</Tag></span>\r\n                                <span><Tag icon={<CheckCircleOutlined />} color=\"success\">{`${done}`}</Tag></span>\r\n                                {\r\n                                    this.props.sprint.statusType==\"TODO\"?\r\n                                    <span className={'action-1'}><Button type=\"primary\" size={'small'} onClick={this.startSprint}>Start Sprint</Button></span>:\r\n                                        this.props.sprint.statusType==\"PROCESSING\"?\"PROCESSING\":\"\"\r\n                                }\r\n\r\n                                <span className={'action-1'}>\r\n                               <Dropdown overlay={menu}>\r\n                                   <Button type={'text'} className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        <EllipsisOutlined />\r\n                                   </Button>\r\n                               </Dropdown>\r\n                           </span>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    {/*body*/}\r\n                    {\r\n                        this.state.toggle?\r\n                            <div className={'sprint-container-body'}>\r\n                                <Table\r\n                                    pagination={false}\r\n                                    dataSource={dataSource}\r\n                                    columns={columns}\r\n                                    rowKey=\"index\"\r\n                                    components={{\r\n                                        body: {\r\n                                            wrapper: this.DraggableContainer,\r\n                                            row: this.DraggableBodyRow,\r\n                                        },\r\n                                    }}\r\n                                    showHeader={false}\r\n                                />\r\n                            </div>\r\n                            :null\r\n                    }\r\n\r\n                    {/*footer*/}\r\n                    {\r\n                        this.state.toggle?\r\n                            <div className={'sprint-container-footer'}>\r\n                                <Button\r\n                                    onClick={()=>this.props.openNewUserStory(true, this.props.sprint)}\r\n                                >\r\n                                    <PlusOutlined /> New User Story\r\n                                </Button>\r\n                            </div>\r\n                            :null\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    this.state.loading?\r\n                        <div className=\"loading-overlay-2\">\r\n                            <div className=\"bounce-loader\">\r\n                                <img src={'/img/preloader.gif'} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        :null\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SprintContainer;\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport SprintContainer from \"../../../../components/sp-componenets/sprint-components/sprint-container\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {Button, message} from \"antd\";\r\nimport SprintEditModal from \"../../../../components/sp-componenets/sprint-components/sprint-edit-modal\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport {connect} from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport UserStoryModal from \"../../../../components/layout-components/UserStoryModal/UserStoryModal\";\r\n\r\nclass ProjectSprints extends React.Component {\r\n\r\n    state = {\r\n        isEditModal: false,\r\n        modalType: null,\r\n        sprint: null,\r\n        sprint_list: [],\r\n        loading: false,\r\n        user_story_modal: false,\r\n        current_sprint: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllSprints();\r\n    }\r\n\r\n// Data fetching -------------------------------------------------------------------------------------------------------\r\n    getAllSprints = () => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/get?project=${this.props.projectReducer.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status==200) {\r\n                    if(response.data.success) {\r\n                        this.setState({\r\n                            sprint_list: response.data.body\r\n                        })\r\n                        this.setState({loading: false});\r\n                    } else {\r\n                        message.error(response.msg);\r\n                        this.setState({loading: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(async error => {\r\n                this.setState({loading: false});\r\n                message.error('Something went wrong!');\r\n        });\r\n    }\r\n// Handle sprint -------------------------------------------------------------------------------------------------------\r\n    handleModal = (type, val) => {\r\n        if(!val) {\r\n            this.setState({isEditModal: val, modalType: null})\r\n            this.getAllSprints();\r\n        } else {\r\n            this.setState({isEditModal: val, modalType: type})\r\n        }\r\n    }\r\n\r\n    openSprintCreateModal = () => {\r\n        this.handleModal('CREATE', true);\r\n    }\r\n\r\n    openSprintUpdateModal = (p) => {\r\n        console.log('Sprint-Data: ', p);\r\n        this.setState({sprint: p});\r\n        this.handleModal('UPDATE', true);\r\n    }\r\n// Move to Sprint ------------------------------------------------------------------------------------------------------\r\n    move_to_sprint = (userStoryId, sprintId) => {\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"patch\";\r\n\r\n        let body = {\r\n            userStoryId: userStoryId,\r\n            sprintId: sprintId\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story/move`, body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    message.success('User story moved to sprint successfully');\r\n                    this.getAllSprints();\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    };\r\n\r\n// Create New User Story -----------------------------------------------------------------------------------------------\r\n    onChangeUserStory = (val) => {\r\n        if(val==\"CREATE\") {\r\n            if(Cookies.get('68e78905f4c')==\"\" ||\r\n                Cookies.get('68e78905f4c')==null ||\r\n                Cookies.get('68e78905f4c')==undefined) {\r\n                this.props.history.push(\"/auth/login\");\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            let request_body = {\r\n                projectId: this.props.project_id,\r\n                userStoryId: this.state.user_story_id,\r\n                title: this.state.user_story,\r\n                description: this.state.content,\r\n                userStoryLabels: this.state.user_story_label,\r\n                priority: this.state.priority\r\n            }\r\n\r\n            let method = \"post\";\r\n\r\n            axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story?id=${0}`, request_body, {headers: headers})\r\n                .then(async response => {\r\n\r\n                    if(response.data.success) {\r\n                        this.prepareResponseData(response.data.body, true);\r\n\r\n                        Swal.fire(\r\n                            'Success',\r\n                            'User story created successfully!',\r\n                            'success'\r\n                        )\r\n                    }\r\n\r\n                }).catch(async error => {\r\n                this.setState({loading: false});\r\n\r\n                this.setState({showMessage:1});\r\n                setTimeout(() => {\r\n                    this.setState({showMessage:0});\r\n                }, 2000);\r\n\r\n            });\r\n        } else {\r\n            if(Cookies.get('68e78905f4c')==\"\" ||\r\n                Cookies.get('68e78905f4c')==null ||\r\n                Cookies.get('68e78905f4c')==undefined) {\r\n                this.props.history.push(\"/auth/login\");\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            let request_body = {\r\n                projectId: this.props.project_id,\r\n                userStoryId: this.state.user_story_id,\r\n                title: this.state.user_story,\r\n                description: this.state.content,\r\n                userStoryLabels: this.state.user_story_label,\r\n                priority: this.state.priority\r\n            }\r\n\r\n            let method = \"post\";\r\n\r\n            axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user-story?id=${0}`, request_body, {headers: headers})\r\n                .then(async response => {\r\n\r\n                    if(response.data.success) {\r\n                        this.prepareResponseData(response.data.body, true);\r\n\r\n                        Swal.fire(\r\n                            'Success',\r\n                            'User story updated successfully!',\r\n                            'success'\r\n                        )\r\n\r\n                    }\r\n\r\n                }).catch(async error => {\r\n                this.setState({loading: false});\r\n\r\n                this.setState({showMessage:1});\r\n                setTimeout(() => {\r\n                    this.setState({showMessage:0});\r\n                }, 2000);\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n// Control Modal -------------------------------------------------------------------------------------------------------\r\n    openEdit = (data, index, sprint) => {\r\n        this.setState({\r\n            selected_user_story: data,\r\n            isEdit: true,\r\n            current_sprint:sprint.id\r\n        })\r\n        this.onChangeUserStoryModal(true);\r\n    }\r\n\r\n    onChangeUserStoryModal = (val, sprint) => {\r\n        this.setState({user_story_modal: val});\r\n        this.setState({current_sprint: sprint});\r\n        if(!val) {\r\n            this.setState({isEdit: false});\r\n        }\r\n        this.getAllSprints();\r\n\r\n    };\r\n\r\n    render() {\r\n        let project_id = this.props.projectReducer.id;\r\n        let project = this.props.projectReducer.project;\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.user_story_modal?\r\n                        <UserStoryModal\r\n                            user_story_modal_visibility={this.state.user_story_modal}\r\n                            project_id={project_id}\r\n                            modal_controller={this.onChangeUserStoryModal}\r\n                            data={this.state.selected_user_story}\r\n                            project={project}\r\n                            isEdit={this.state.isEdit}\r\n                            current_sprint={this.state.current_sprint}\r\n                        />\r\n                        :\"\"\r\n                }\r\n                <h3>Sprints</h3>\r\n                <div>\r\n                    {\r\n                        this.state.sprint_list.map((r, i)=><SprintContainer sprint={r} key={i} updateSprint={this.openSprintUpdateModal} openEdit={this.openEdit} openNewUserStory={this.onChangeUserStoryModal} move_user_story={this.move_to_sprint} loadSprints={this.getAllSprints} />)\r\n                    }\r\n                    <div>\r\n                        <Button type=\"primary\" onClick={this.openSprintCreateModal}><PlusOutlined />Create Sprint</Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.isEditModal?\r\n                        <SprintEditModal type={this.state.modalType} sprint={this.state.sprint} isEditVisible={this.state.isEditModal} onClose={this.handleModal} projectId={this.props.projectReducer.id} />\r\n                        :null\r\n                }\r\n\r\n\r\n                {\r\n                    this.state.loading?\r\n                        <div className=\"loading-overlay-2\">\r\n                            <div className=\"bounce-loader\">\r\n                                <img src={'/img/preloader.gif'} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        :null\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectSprints));\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport {connect} from \"react-redux\";\r\nimport {message, Select} from \"antd\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\n\r\nconst { Option } = Select;\r\n\r\n// ChartJS.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend\r\n// );\r\nconst options = {\r\n    responsive: true,\r\n    elements: {\r\n        line: {\r\n            tension: 0\r\n        }\r\n    },\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst options2 = {\r\n    type: 'bar',\r\n    options: {\r\n        barValueSpacing: 20,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\nlet labels = [\"2022-03-02\", \"2022-03-03\", \"2022-03-04\", \"2022-03-05\", \"2022-03-06\", \"2022-03-07\", \"2022-03-08\", \"2022-03-09\", \"2022-03-10\", \"2022-03-11\"];\r\n\r\nconst data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            label: 'Dataset 1',\r\n            data: [12, 19, 3, 5, 2, 3, 2],\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            fill: false,\r\n        },\r\n        {\r\n            label: 'Dataset 2',\r\n            data: [12, 30, 3, 5, 2, 3, 2],\r\n            borderColor: '#E0E0E0',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            fill: false,\r\n        },\r\n    ],\r\n};\r\n\r\nclass ProjectReportsBurnup extends React.Component {\r\n\r\n    state = {\r\n        burnDown: null,\r\n        burnUp: null,\r\n        velocity: null,\r\n        sprints: [],\r\n        selectedSprint: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllSprints();\r\n    }\r\n\r\n\r\n    onChangeSprint = e => {\r\n        this.setState({\r\n            selectedSprint: e\r\n        })\r\n        this.loadBurnUp(e);\r\n    }\r\n    getAllSprints = () => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/get?project=${this.props.projectReducer.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status==200) {\r\n                    if(response.data.success) {\r\n                        this.setState({\r\n                            sprints: response.data.body,\r\n                        })\r\n                        if(response.data.body!=null) {\r\n                            if(response.data.body.length>0) {\r\n                                this.setState({\r\n                                    selectedSprint: response.data.body[0].id\r\n                                })\r\n                                this.loadBurnUp(response.data.body[0].id);\r\n                            }\r\n                        }\r\n                        this.setState({loading: false});\r\n                    } else {\r\n                        message.error(response.msg);\r\n                        this.setState({loading: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(async error => {\r\n                this.setState({loading: false});\r\n                message.error('Something went wrong!');\r\n            });\r\n    }\r\n\r\n    loadBurnUp = (id) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let request_body = {}\r\n        let method = \"get\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}project-report/burnup/${id}`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({burnUp: response.data.body});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let burnUpLabel = [];\r\n        let burnUpIdeal = [];\r\n        let burnUpRemainingEffortData = [];\r\n        let burnUpData = null;\r\n\r\n        if(this.state.burnUp!=null) {\r\n            let pre = 0;\r\n            this.state.burnUp.data.map((result, index)=>{\r\n                burnUpLabel.push(result.label);\r\n                let date = new Date(result.label);\r\n                console.log(\"--------------------------------------------------\")\r\n                console.log(\"Date: \", date.setHours(0,0,0,0))\r\n                console.log(\"Date compare: \", new Date().setHours(0,0,0,0)>=date.setHours(0,0,0,0))\r\n                if(result.active & (new Date().setHours(0,0,0,0)>=date.setHours(0,0,0,0))) {\r\n                    if(result.remainingEffortPoints==0) {\r\n                        burnUpRemainingEffortData.push(pre);\r\n                    } else {\r\n                        burnUpRemainingEffortData.push(result.remainingEffortPoints);\r\n                        pre = result.remainingEffortPoints;\r\n                    }\r\n                }\r\n                burnUpIdeal.push(result.idealPoints);\r\n            });\r\n            if(burnUpLabel!=null && burnUpLabel!=undefined && burnUpLabel!=\"\") {\r\n                labels = burnUpLabel;\r\n                burnUpData = {\r\n                    labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Dataset 1',\r\n                            data: burnUpRemainingEffortData,\r\n                            borderColor: 'rgb(255, 99, 132)',\r\n                            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                            fill: false,\r\n                        },\r\n                        {\r\n                            label: 'Dataset 2',\r\n                            data: burnUpIdeal,\r\n                            borderColor: '#E0E0E0',\r\n                            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                            fill: false,\r\n                        },\r\n                    ],\r\n                };\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                this is project reports\r\n                <div>\r\n                    <h3>Burn up</h3>\r\n                    <br/>\r\n                    <div>\r\n                        <Select value={this.state.selectedSprint} style={{ width: 120 }}\r\n                                onChange={this.onChangeSprint}\r\n                        >\r\n                            {\r\n                                this.state.sprints.map((result, index)=><Option value={result.id}>{result.sprintName}</Option>)\r\n                            }\r\n                        </Select>\r\n                    </div>\r\n                    <br/>\r\n                    {\r\n                        burnUpData!=null?<Line options={options} data={burnUpData} />:null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectReportsBurnup));\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport {connect} from \"react-redux\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\nimport {message, Select} from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\n// ChartJS.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend\r\n// );\r\nconst options = {\r\n    responsive: true,\r\n    elements: {\r\n        line: {\r\n            tension: 0\r\n        }\r\n    },\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst options2 = {\r\n    type: 'bar',\r\n    options: {\r\n        barValueSpacing: 20,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\nlet labels = [\"2022-03-02\", \"2022-03-03\", \"2022-03-04\", \"2022-03-05\", \"2022-03-06\", \"2022-03-07\", \"2022-03-08\", \"2022-03-09\", \"2022-03-10\", \"2022-03-11\"];\r\n\r\nconst data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            label: 'Dataset 1',\r\n            data: [12, 19, 3, 5, 2, 3, 2],\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            fill: false,\r\n        },\r\n        {\r\n            label: 'Dataset 2',\r\n            data: [12, 30, 3, 5, 2, 3, 2],\r\n            borderColor: '#E0E0E0',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            fill: false,\r\n        },\r\n    ],\r\n};\r\n\r\nclass ProjectReportsBurndown extends React.Component {\r\n\r\n    state = {\r\n        burnDown: null,\r\n        burnUp: null,\r\n        velocity: null,\r\n        sprints: [],\r\n        selectedSprint: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllSprints();\r\n    }\r\n\r\n    onChangeSprint = e => {\r\n        this.setState({\r\n            selectedSprint: e\r\n        })\r\n        this.loadBurnDown(e);\r\n    }\r\n    getAllSprints = () => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}sprint/get?project=${this.props.projectReducer.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.status==200) {\r\n                    if(response.data.success) {\r\n                        this.setState({\r\n                            sprints: response.data.body,\r\n                        })\r\n                        if(response.data.body!=null) {\r\n                            if(response.data.body.length>0) {\r\n                                this.setState({\r\n                                    selectedSprint: response.data.body[0].id\r\n                                })\r\n                                this.loadBurnDown(response.data.body[0].id);\r\n                            }\r\n                        }\r\n                        this.setState({loading: false});\r\n                    } else {\r\n                        message.error(response.msg);\r\n                        this.setState({loading: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(async error => {\r\n                this.setState({loading: false});\r\n                message.error('Something went wrong!');\r\n            });\r\n    }\r\n\r\n    loadBurnDown = (id) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let request_body = {}\r\n        let method = \"get\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}project-report/burndown/${id}`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({burnDown: response.data.body});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let burnDownLabel = [];\r\n        let burnDownIdeal = [];\r\n        let burnDownRemainingEffortData = [];\r\n        let burnDownData = null\r\n\r\n        if(this.state.burnDown!=null) {\r\n            this.state.burnDown.data.map((result, index)=>{\r\n                burnDownLabel.push(result.label);\r\n                let date = new Date(result.label);\r\n                console.log(\"--------------------------------------------------\")\r\n                console.log(\"Date: \", date.setHours(0,0,0,0))\r\n                console.log(\"Date compare: \", new Date().setHours(0,0,0,0)>=date.setHours(0,0,0,0))\r\n                if(result.active & (new Date().setHours(0,0,0,0)>=date.setHours(0,0,0,0))) {\r\n                    burnDownRemainingEffortData.push(result.remainingEffortPoints);\r\n                }\r\n                burnDownIdeal.push(result.idealPoints);\r\n            });\r\n            if(burnDownLabel!=null && burnDownLabel!=undefined && burnDownLabel!=\"\") {\r\n                labels = burnDownLabel;\r\n                burnDownData = {\r\n                    labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Dataset 1',\r\n                            data: burnDownRemainingEffortData,\r\n                            borderColor: 'rgb(255, 99, 132)',\r\n                            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                            fill: false,\r\n                        },\r\n                        {\r\n                            label: 'Dataset 2',\r\n                            data: burnDownIdeal,\r\n                            borderColor: '#E0E0E0',\r\n                            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                            fill: false,\r\n                        },\r\n                    ],\r\n                };\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                this is project reports\r\n                <div>\r\n                    <h3>Burn down</h3>\r\n                    <br/>\r\n                    <div>\r\n                        <Select value={this.state.selectedSprint} style={{ width: 120 }}\r\n                                onChange={this.onChangeSprint}\r\n                        >\r\n                            {\r\n                                this.state.sprints.map((result, index)=><Option value={result.id}>{result.sprintName}</Option>)\r\n                            }\r\n                        </Select>\r\n                    </div>\r\n                    <br/>\r\n                    {\r\n                        burnDownData!=null?<Line options={options} data={burnDownData} />:null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectReportsBurndown));\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport {connect} from \"react-redux\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\n\r\n// ChartJS.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend\r\n// );\r\nconst options = {\r\n    responsive: true,\r\n    elements: {\r\n        line: {\r\n            tension: 0\r\n        }\r\n    },\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Chart.js Line Chart',\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst options2 = {\r\n    type: 'bar',\r\n    options: {\r\n        barValueSpacing: 20,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\nlet labels = [\"2022-03-02\", \"2022-03-03\", \"2022-03-04\", \"2022-03-05\", \"2022-03-06\", \"2022-03-07\", \"2022-03-08\", \"2022-03-09\", \"2022-03-10\", \"2022-03-11\"];\r\n\r\nconst data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            label: 'Dataset 1',\r\n            data: [12, 19, 3, 5, 2, 3, 2],\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            fill: false,\r\n        },\r\n        {\r\n            label: 'Dataset 2',\r\n            data: [12, 30, 3, 5, 2, 3, 2],\r\n            borderColor: '#E0E0E0',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            fill: false,\r\n        },\r\n    ],\r\n};\r\n\r\nclass ProjectReportsVelocity extends React.Component {\r\n\r\n    state = {\r\n        burnDown: null,\r\n        burnUp: null,\r\n        velocity: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadVelocity(this.props.projectReducer.project.id);\r\n    }\r\n\r\n    loadVelocity = (projectId) => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let request_body = {}\r\n        let method = \"get\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}project-report/sprint-velocity/${projectId}`, request_body, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({velocity: response.data.body});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let velocityLabels = [];\r\n        let velocityIdeal = [];\r\n        let velocityDone = [];\r\n\r\n        if(this.state.velocity!=null) {\r\n            this.state.velocity.map((result, index)=>{\r\n                velocityLabels.push(result.sprint.sprintName);\r\n                velocityIdeal.push(result.ideal);\r\n                velocityDone.push(result.done);\r\n            });\r\n        }\r\n\r\n        let sprintVelocity = {\r\n            labels: velocityLabels,\r\n            datasets: [\r\n                {\r\n                    label: \"Completed\",\r\n                    backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n                    data: velocityDone\r\n                },\r\n                {\r\n                    label: \"Total Points\",\r\n                    fillColor: \"#BDBDBD\",\r\n                    data: velocityIdeal\r\n                },\r\n            ]\r\n        };\r\n\r\n\r\n        let pp = {\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                this is project reports\r\n                <div>\r\n                    <h3>Sprint Velocity</h3>\r\n                    {\r\n                        <Bar options={pp} data={sprintVelocity} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectReportsVelocity));\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {AutoComplete, Button, Input, Modal, Table, Tag} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as spinner_actions from \"../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../redux/actions/Documents\";\r\nimport * as poker_actions from \"../../../../redux/actions/Poker\";\r\nimport {connect} from \"react-redux\";\r\nimport * as BaseUrl from \"../../../../server/base_urls\";\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: 'Mike',\r\n        age: 32,\r\n        address: '10 Downing Street',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'John',\r\n        age: 42,\r\n        address: '10 Downing Street',\r\n    },\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n    },\r\n];\r\n\r\nconst addProjectMembersColumns = [\r\n    {\r\n        title: 'User',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        width: '80%',\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'action',\r\n        key: 'action',\r\n        width: '20%',\r\n    }\r\n];\r\n\r\nclass ProjectTeams extends React.Component {\r\n\r\n    state = {\r\n        team: [],\r\n        addProjectMembers: false,\r\n        add_corporate_employee_options: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTeam();\r\n    }\r\n\r\n    getTeam = () => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n        let method = \"get\";\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}project-member/get-team?id=${this.props.projectReducer.project.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({team: response.data.body});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n    onSearchUsers = e => {\r\n        let value  = e.target.value;\r\n        this._onSearchUsers(value);\r\n    };\r\n\r\n    _onSearchUsers = value => {\r\n        let res = [];\r\n\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let req_obj = {\r\n        };\r\n\r\n        axios.post(`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}user/search?keyword=${value}&corporate=${this.props.corporateReducer.corporate_id}&project=${this.props.projectReducer.project.id}`, req_obj, {headers})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if(res.data.success) {\r\n                    this.setState({\r\n                        add_corporate_employee_options: res.data.body\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    addProjectMemberModalVisibility = e => {\r\n        this.setState({addProjectMembers: e});\r\n        if(e) {\r\n            this._onSearchUsers(\"\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let managerTeam = [];\r\n        let otherTeam = [];\r\n        this.state.team.map((result, index)=>{\r\n            let obj = {\r\n                name: `${ result.corporateEmployee.user.firstName } ${ result.corporateEmployee.user.lastName }`,\r\n                role: result.scrumRole\r\n            }\r\n            if(result.scrumRole=='PRODUCT_OWNER' || result.scrumRole=='SCRUM_MASTER') {\r\n                managerTeam.push(obj);\r\n            } else {\r\n                otherTeam.push(obj);\r\n            }\r\n        });\r\n\r\n\r\n        let list_add_employee_options = [];\r\n        if(this.state.add_corporate_employee_options!=null && this.state.add_corporate_employee_options!=\"\" && this.state.add_corporate_employee_options!= undefined) {\r\n            this.state.add_corporate_employee_options.map((result, index)=>{\r\n                let obj = {\r\n                    key: index,\r\n                    user: <div>\r\n                        <div>{`${result.firstName} ${result.lastName}`}</div>\r\n                        <div><span>{`${result.refNo}`}</span>{`${\" | \"}`}<span>{`${result.email}`}</span></div>\r\n                    </div>,\r\n                    action: (result.yourCorporate)? <Tag color=\"purple\">Member</Tag>\r\n                        :\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={()=>this.sendInvitations({\r\n                                userId: result.id,\r\n                                corporateId: this.props.corporateReducer.corporate_id,\r\n                                email: result.email,\r\n                                accessType: 'CORPORATE_EMPLOYEE'\r\n                            })}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                };\r\n                list_add_employee_options.push(obj);\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n\r\n                <Modal\r\n                    title={`Add Corporate Employee`}\r\n                    centered\r\n                    visible={this.state.addProjectMembers}\r\n                    onCancel={() => this.addProjectMemberModalVisibility(false)}\r\n                    width={600}\r\n                    footer={null}\r\n                >\r\n                    <div className={'text-center'}>\r\n                        <AutoComplete\r\n                            dropdownClassName=\"certain-category-search-dropdown\"\r\n                            dropdownMatchSelectWidth={500}\r\n                            style={{ minWidth: '80%' }}\r\n                        >\r\n                            <Input.Search size=\"large\" placeholder=\"input here\" onChange={this.onSearchUsers}/>\r\n                        </AutoComplete>\r\n\r\n                        <Table dataSource={list_add_employee_options} columns={addProjectMembersColumns}/>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <h3>Team</h3>\r\n                <br/>\r\n                <div>\r\n                    <Button onClick={()=>this.addProjectMemberModalVisibility(true)}>Add Member</Button>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <h5>Managers</h5>\r\n                        <Table dataSource={managerTeam} columns={columns} />\r\n                    </div>\r\n                    <div>\r\n                        <h5>Other Members</h5>\r\n                        <Table dataSource={otherTeam} columns={columns} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data)),\r\n        storePokerRoom: (data) => dispatch(poker_actions.storePokerRoom(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectTeams));\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProjectNotifications extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                this is project notifications\r\n                <div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ProjectNotifications);\r\n","export const inner_route_home = \"/app/project/docs\";\r\nexport const inner_route_editor = \"/app/project/docs/editor\";\r\n","import React from \"react\";\r\nimport {Button, Form, Input, message, Modal, Select} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../../server/base_urls\";\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../../redux/actions/Documents\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass DocsModal extends React.Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        loading: false\r\n    }\r\n\r\n    onChangeName = e => {\r\n        this.setState({name: e.target.value})\r\n    }\r\n\r\n    onCreate = () => {\r\n        if(this.state.name==null || this.state.name==\"\" || this.state.name==undefined) {\r\n            message.error(\"Please enter document name\");\r\n        } else {\r\n            this.setState({loading: true});\r\n            if(Cookies.get('68e78905f4c')==\"\" ||\r\n                Cookies.get('68e78905f4c')==null ||\r\n                Cookies.get('68e78905f4c')==undefined) {\r\n                this.props.history.push(\"/auth/login\");\r\n            }\r\n\r\n            let headers = {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n            };\r\n\r\n            let method = \"post\";\r\n\r\n            let body = {\r\n                projectId: this.props.projectReducer.project.id,\r\n                name: this.state.name\r\n            }\r\n\r\n            axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}docs/create`, body, {headers: headers})\r\n                .then(async response => {\r\n\r\n                    if(response.data.success) {\r\n                        this.setState({loading: false});\r\n                        message.success(response.data.msg);\r\n                        this.props.navigateToEdit(response.data.body);\r\n                    }\r\n\r\n                }).catch(async error => {\r\n                this.setState({loading: false});\r\n                this.setState({showMessage:1});\r\n                setTimeout(() => {\r\n                    this.setState({showMessage:0});\r\n                }, 2000);\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal\r\n                title=\"New Document\"\r\n                visible={this.props.isEditVisible}\r\n                onCancel={()=>this.props.openEdit(false)}\r\n                footer={false}\r\n                className={'sprint-edit-modal'}\r\n            >\r\n                <div>\r\n                    <Form\r\n                        layout=\"vertical\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Document Name\"\r\n                        >\r\n                            <Input placeholder=\"Document Name...\" value={this.state.name} onChange={this.onChangeName} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item className={'text-right'}>\r\n                            <Button type=\"primary\" onClick={this.onCreate}>Create</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                {\r\n                    this.state.loading?\r\n                        <div className=\"loading-overlay-2\">\r\n                            <div className=\"bounce-loader\">\r\n                                <img src={'/img/preloader.gif'} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        :null\r\n                }\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DocsModal);\r\n","import React from \"react\";\r\nimport {Button, Table} from \"antd\";\r\nimport * as innerRouters from './docs-inner-routers';\r\nimport DocsModal from \"./docs-modal\";\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../../redux/actions/Documents\";\r\nimport {connect} from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../../server/base_urls\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Document',\r\n        dataIndex: 'document',\r\n        key: 'document',\r\n    },\r\n    {\r\n        title: 'Created',\r\n        dataIndex: 'createdDate',\r\n        key: 'createdDate',\r\n    },\r\n    {\r\n        title: 'Last Modified',\r\n        dataIndex: 'modifiedDate',\r\n        key: 'address',\r\n    },\r\n    {\r\n        title: 'Actions',\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n    },\r\n];\r\n\r\nclass ProjectDocsAll extends React.Component {\r\n\r\n    state = {\r\n        isEdit: false,\r\n        loading: false,\r\n        documents: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_all_documents();\r\n    }\r\n\r\n    load_all_documents = () => {\r\n        this.setState({loading: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}docs/get?id=${this.props.projectReducer.project.id}`, {headers: headers})\r\n            .then(async response => {\r\n                if(response.data.success) {\r\n                    this.setState({documents: response.data.body, loading: false});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    openCreateNewDoc = value => {\r\n        this.setState({isEdit: value})\r\n    }\r\n\r\n    navigateToEdit = data => {\r\n        this.props.storeCurrentDoc(data);\r\n        this.setState({isEdit: false});\r\n        this.openEditor();\r\n    }\r\n\r\n    openEditor = () => {\r\n        this.props.history.push(innerRouters.inner_route_editor);\r\n    }\r\n\r\n    render() {\r\n        let {documents} = this.state;\r\n        let dataSource = [];\r\n        documents.map((result, index)=>{\r\n\r\n            let cd = result.createdDate;\r\n            let cdSplit = cd.split('T');\r\n            let cd1 = cdSplit[0];\r\n            let cd2 = cdSplit[1].split('.')[0];\r\n\r\n            let md = result.modifiedDate;\r\n            let md1 = \"\";\r\n            let md2 = \"\";\r\n            if(md!=null) {\r\n                let mdSplit = md.split('T');\r\n                md1 = mdSplit[0];\r\n                md2 = mdSplit[1].split('.')[0];\r\n            }\r\n\r\n            let obj = {\r\n                document: result.name,\r\n                createdDate: `${cd1} ${cd2}`,\r\n                modifiedDate: md!=null?`${md1} ${md2}`:\"-\",\r\n                actions: <Button type={'text'} onClick={()=>this.navigateToEdit(result)}>View</Button>\r\n            }\r\n            dataSource.push(obj);\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <DocsModal isEditVisible={this.state.isEdit} openEdit={this.openCreateNewDoc} navigateToEdit={this.navigateToEdit}  />\r\n                <div></div>\r\n                <br/>\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Button type=\"primary\" onClick={()=>this.openCreateNewDoc(true)}>New Document</Button>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <Table dataSource={dataSource} columns={columns} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectDocsAll);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport * as innerRoutes from './docs-inner-routers';\r\nimport {Form, Input, message, Tag} from \"antd\";\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport * as document_actions from \"../../../../../redux/actions/Documents\";\r\nimport {connect} from \"react-redux\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './docs-styles.scss';\r\nimport {\r\n    SyncOutlined,\r\n} from '@ant-design/icons';\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../../../server/base_urls\";\r\n\r\nconst toolbarOptions = {toolbar: [\r\n        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n        ['blockquote', 'code-block'],\r\n\r\n        [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n        [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n        [{ 'direction': 'rtl' }],                         // text direction\r\n        ['link', 'image'],\r\n        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n        [{ 'font': [] }],\r\n        [{ 'align': [] }],\r\n\r\n        ['clean']                                         // remove formatting button\r\n    ]\r\n};\r\n\r\nclass ProjectDocsEditor extends React.Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        value: \"\",\r\n        saving: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            title: this.props.documentReducer.document.name,\r\n            value: this.props.documentReducer.document.doc\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        setInterval(this.onSave, 10000);\r\n    }\r\n\r\n    onChangeTitle = e => {\r\n        this.setState({title: e.target.value});\r\n    }\r\n\r\n    setValue = e => {\r\n        this.setState({value: e});\r\n    }\r\n\r\n    onSave = () => {\r\n        this.setState({saving: true});\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"patch\";\r\n\r\n        let body = {\r\n            id: this.props.documentReducer.document.id,\r\n            name: this.state.title,\r\n            doc: this.state.value\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}docs/update`, body, {headers: headers})\r\n            .then(async response => {\r\n\r\n                if(response.data.success) {\r\n                    this.setState({saving: false});\r\n                }\r\n\r\n            }).catch(async error => {\r\n            this.setState({saving: false});\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    offEditor = () => {\r\n        this.props.history.push(innerRoutes.inner_route_home);\r\n    }\r\n\r\n    render() {\r\n        let {title, value, saving} = this.state;\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <div><span onClick={this.offEditor}>All Project Docs</span><span>{`${\" > \"}`}</span><span style={{fontWeight: 'bold'}}>New Doc Editor</span></div>\r\n                </div>\r\n                <br/>\r\n                <h3>Editor</h3>\r\n                <br/>\r\n                <div>\r\n                    <Form\r\n                        layout=\"vertical\"\r\n                    >\r\n                        <Form.Item>\r\n                            <Input placeholder=\"Document Title...\" value={title} onChange={this.onChangeTitle} />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        saving?\r\n                        <Tag icon={<SyncOutlined spin />} color=\"processing\">\r\n                            processing\r\n                        </Tag>\r\n                        :\r\n                        null\r\n                    }\r\n                    <ReactQuill modules={toolbarOptions} theme=\"snow\" value={value} onChange={this.setValue}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer,\r\n    documentReducer: state.documentReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // corporateHandler: (data) => dispatch(corporate_actions.storeCorporateId(data)),\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data)),\r\n        storeCurrentDoc: (data) => dispatch(document_actions.storeCurrentDocument(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectDocsEditor));\r\n","import React from \"react\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as innerRoutes from \"./docs-inner-routers\";\r\nimport AllDocs from './project-docs-all';\r\nimport DocEditor from './project-docs-editor';\r\nimport * as spinner_actions from \"../../../../../redux/actions/Spinner\";\r\nimport * as navigation_actions from \"../../../../../redux/actions/Navigation\";\r\nimport * as project_actions from \"../../../../../redux/actions/Project\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectDocs extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path={innerRoutes.inner_route_home} component={AllDocs}/>\r\n                    <Route path={innerRoutes.inner_route_editor} component={DocEditor}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    corporateReducer: state.corporateReducer,\r\n    projectReducer: state.projectReducer\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSpinner: (data) => dispatch(spinner_actions.handlerSpinner(data)),\r\n        handleNavigation: (data) => dispatch(navigation_actions.handlerNavigation(data)),\r\n        handleProjectId: (data) => dispatch(project_actions.handleProjectId(data))\r\n    };\r\n};\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(ProjectDocs);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProjectSettings extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                this is project settings\r\n                <div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ProjectSettings);\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\nimport Corporate from \"./corporate\";\r\nimport CorporateManagementView from \"./corporate/CorporateManagement\";\r\n\r\n// project-views\r\nimport ProjectSPPPoker from \"./project/project-views/project-spp-poker\";\r\nimport ProjectBacklog from \"./project/project-views/project-backlog\";\r\nimport ProjectSprints from \"./project/project-views/project-sprints\";\r\nimport ProjectReportsBurnup from \"./project/project-views/project-reports-burnup\";\r\nimport ProjectReportsBurndown from \"./project/project-views/project-report-burndown\";\r\nimport ProjectReportsVelocity from \"./project/project-views/project-report-velocity\";\r\nimport ProjectTeam from \"./project/project-views/project-teams\";\r\nimport ProjectNotifications from \"./project/project-views/project-notifications\";\r\nimport ProjectDocs from \"./project/project-views/project-docs\";\r\nimport ProjectSettings from \"./project/project-views/project-settings\";\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        {/*<Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />*/}\r\n        {/*<Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />*/}\r\n        {/*<Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/profile`} />*/}\r\n          <Route exact path={`${APP_PREFIX_PATH}`} component={lazy(() => import(`./project`))} />\r\n          <Route exact path={`${APP_PREFIX_PATH}/profile`} component={lazy(() => import(`./profile`))} />\r\n          <Route exact path={`${APP_PREFIX_PATH}/invitation`} component={lazy(() => import(`./invitation`))} />\r\n          <Route exact path={`${APP_PREFIX_PATH}/corporate`} component={Corporate} />\r\n          <Route path={`${APP_PREFIX_PATH}/corporate/manage`} component={CorporateManagementView} />\r\n          <Route exact path={`${APP_PREFIX_PATH}/project`} component={lazy(() => import(`./project`))} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/spp-poker`} component={ProjectSPPPoker} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/backlog`} component={ProjectBacklog} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/sprints`} component={ProjectSprints} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/reports-burnup`} component={ProjectReportsBurnup} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/reports-burndown`} component={ProjectReportsBurndown} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/reports-velocity`} component={ProjectReportsVelocity} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/team`} component={ProjectTeam} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/notifications`} component={ProjectNotifications} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/docs`} component={ProjectDocs} />\r\n          <Route path={`${APP_PREFIX_PATH}/project/settings`} component={ProjectSettings} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport * as navigationConfig from \"../../configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig.dashBoardNavTree, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\nimport Loading from \"../components/shared-components/Loading\";\r\nimport {ThemeSwitcherProvider} from \"react-css-theme-switcher\";\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location, direction, loading } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n      <Loading loading={loading}/>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth, spinnerReducer }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  const { loading } = spinnerReducer;\r\n  return { locale, token, direction, loading}\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport './style.scss';\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport corporateReducer from './redux/reducers/Corporate';\r\nimport {Provider} from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// const rootReducer = combineReducers({\r\n//     corporateReducer:corporateReducer\r\n// });\r\n//\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n//\r\n// const store = createStore(\r\n//     rootReducer,\r\n//     {},\r\n//     composeEnhancers(applyMiddleware(thunk))\r\n// )\r\n\r\nReactDOM.render(\r\n    // <Provider store={store}>\r\n        <App />\r\n    // </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}