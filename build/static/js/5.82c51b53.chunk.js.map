{"version":3,"sources":["views/app-views/invitation/index.js"],"names":["columns","title","dataIndex","key","Invitation","state","data","load_invitations","headers","Cookies","get","axios","BaseUrl","then","a","response","console","log","success","setState","body","catch","error","loading","showMessage","setTimeout","sendResponse","value","undefined","props","history","push","invitationId","id","invitationStatus","status","this","data_list","map","result","index","split","invitationDate","split1","obj","date","corporate","name","type","onClick","color","dataSource","React","Component"],"mappings":"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","file":"static/js/5.82c51b53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Table, Tag} from \"antd\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport * as BaseUrl from \"../../../server/base_urls\";\r\n\r\nconst dataSource = [\r\n    {\r\n        key: '1',\r\n        name: 'Mike',\r\n        age: 32,\r\n        address: '10 Downing Street',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'John',\r\n        age: 42,\r\n        address: '10 Downing Street',\r\n    },\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n    },\r\n    {\r\n        title: 'Corporate',\r\n        dataIndex: 'corporate',\r\n        key: 'corporate',\r\n    },\r\n    {\r\n        title: 'Response',\r\n        dataIndex: 'response',\r\n        key: 'response',\r\n    },\r\n];\r\n\r\nclass Invitation extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n        this.load_invitations();\r\n    }\r\n\r\n    load_invitations = () => {\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"get\";\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/employee/invitations`, {headers: headers})\r\n            .then(async response => {\r\n                console.log(response);\r\n                if(response.data.success) {\r\n                    this.setState({data: response.data.body});\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    sendResponse = value => {\r\n        if(Cookies.get('68e78905f4c')==\"\" ||\r\n            Cookies.get('68e78905f4c')==null ||\r\n            Cookies.get('68e78905f4c')==undefined) {\r\n            this.props.history.push(\"/auth/login\");\r\n        }\r\n\r\n        let headers = {\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer ' + Cookies.get('68e78905f4c')\r\n        };\r\n\r\n        let method = \"post\";\r\n\r\n        let body = {\r\n            invitationId: value.id,\r\n            invitationStatus: value.status\r\n        }\r\n\r\n        axios[method](`${BaseUrl.SCRUM_PEPPER_API_URL(BaseUrl.URL_TYPE)}corporate/employee/approve`, body, {headers: headers})\r\n            .then(async response => {\r\n                console.log(response);\r\n                if(response.data.success) {\r\n                    this.setState({data: response.data.body});\r\n                    this.load_invitations();\r\n                }\r\n            }).catch(async error => {\r\n            this.setState({loading: false});\r\n\r\n            this.setState({showMessage:1});\r\n            setTimeout(() => {\r\n                this.setState({showMessage:0});\r\n            }, 2000);\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let data_list = [];\r\n        if(this.state.data!=null & this.state.data!=undefined & this.state.data!=\"\") {\r\n            this.state.data.map((result, index)=>{\r\n\r\n                let split = (result.invitationDate).split(\"T\");\r\n                let split1 = split[1].split(\".\");\r\n\r\n                let obj = {\r\n                   key: index,\r\n                   date: `${split[0]} ${split1[0]}`,\r\n                   corporate: result.corporate.name,\r\n                   response: (result.status==\"PENDING\")?\r\n                       <div>\r\n                           <Button type=\"primary\" onClick={()=>this.sendResponse({id:result.id, status:`ACCEPTED`})}>Accept</Button>\r\n                           <Button type=\"danger\" onClick={()=>this.sendResponse({id:result.id, status:`REJECT`})}>Reject</Button>\r\n                       </div>\r\n\r\n                       :(result.status==\"ACCEPTED\")?<Tag color=\"geekblue\">Accepted</Tag>:<Tag color=\"orange\">Rejected</Tag>\r\n               }\r\n               data_list.push(obj);\r\n            });\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <Table dataSource={data_list} columns={columns} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Invitation;\r\n"],"sourceRoot":""}